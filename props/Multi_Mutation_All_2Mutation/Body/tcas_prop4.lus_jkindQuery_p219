node main(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int
) returns (

);
var
  p1 : bool;
  p2 : bool;
  p4 : bool;
  p5 : bool;
  p6 : bool;
  p7 : bool;
  p8 : bool;
  p9 : bool;
  p10 : bool;
  p11 : bool;
  p12 : bool;
  p13 : bool;
  p14 : bool;
  p15 : bool;
  p16 : bool;
  p17 : bool;
  p18 : bool;
  p19 : bool;
  p20 : bool;
  p21 : bool;
  p22 : bool;
  p23 : bool;
  p24 : bool;
  p25 : bool;
  p26 : bool;
  p27 : bool;
  p28 : bool;
  p29 : bool;
  p30 : bool;
  p31 : bool;
  p32 : bool;
  p33 : bool;
  p34 : bool;
  p35 : bool;
  p36 : bool;
  p37 : bool;
  p38 : bool;
  p39 : bool;
  p40 : bool;
  p41 : bool;
  p42 : bool;
  p43 : bool;
  p44 : bool;
  p45 : bool;
  p46 : bool;
  p47 : bool;
  p48 : bool;
  p49 : bool;
  p50 : bool;
  tight : bool;
let
  --%MAIN;
  p1 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p2 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s <> 1));

  p4 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p5 = (((alim_res_s <= 740) xor (alim_res_s <= result_alt_sep_test_s)) and ((result_alt_sep_test_s <= 2) and (alim_res_s > 399)));

  p6 = (true => (result_alt_sep_test_s >= 0));

  p7 = (((alim_res_s <= 499) xor (alim_res_s = 400)) => false);

  p8 = (((Up_Separation_s <= Down_Separation_s) => (Up_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p9 = (((alim_res_s < 400) and (Down_Separation_s < alim_res_s)) => false);

  p10 = (((alim_res_s <= Up_Separation_s) => (Down_Separation_s < Up_Separation_s)) => (result_alt_sep_test_s <> 2));

  p11 = (((alim_res_s <= 399) and (Down_Separation_s < alim_res_s)) => false);

  p12 = (((alim_res_s = 400) xor (alim_res_s > 499)) and ((result_alt_sep_test_s >= 0) xor (result_alt_sep_test_s > 2)));

  p13 = (((Up_Separation_s >= alim_res_s) and (alim_res_s < 400)) => false);

  p14 = (((result_alt_sep_test_s > 2) => (alim_res_s < 400)) and ((alim_res_s >= 500) xor (alim_res_s = 400)));

  p15 = (((alim_res_s = 400) xor (alim_res_s > 499)) and ((result_alt_sep_test_s >= 0) xor (result_alt_sep_test_s > 2)));

  p16 = (((alim_res_s = 500) xor (alim_res_s = 400)) xor ((alim_res_s = 740) xor (alim_res_s = 640)));

  p17 = (((Up_Separation_s < alim_res_s) and (alim_res_s <= Down_Separation_s)) => (result_alt_sep_test_s <> 2));

  p18 = (((Up_Separation_s <= Down_Separation_s) => (Up_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p19 = (true => (result_alt_sep_test_s >= 0));

  p20 = (((alim_res_s = 400) xor (alim_res_s >= 409)) and ((result_alt_sep_test_s <= 2) and (alim_res_s <= 740)));

  p21 = (((Up_Separation_s >= alim_res_s) and (alim_res_s < 400)) => false);

  p22 = (((alim_res_s <= 499) xor (alim_res_s = 400)) => false);

  p23 = (((alim_res_s = 400) xor (alim_res_s >= 500)) and ((alim_res_s <= 740) and (result_alt_sep_test_s <= 2)));

  p24 = (((alim_res_s <= 499) xor (alim_res_s = 400)) => false);

  p25 = (((alim_res_s < 400) and (Down_Separation_s < alim_res_s)) => false);

  p26 = (true => (result_alt_sep_test_s >= 0));

  p27 = (((alim_res_s = 400) xor (alim_res_s = 740)) xor ((alim_res_s = 500) xor (alim_res_s = 640)));

  p28 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s <= alim_res_s)) => (result_alt_sep_test_s <> 2));

  p29 = (((alim_res_s > 499) xor (alim_res_s = 400)) and ((result_alt_sep_test_s > 2) xor (result_alt_sep_test_s >= 0)));

  p30 = (((alim_res_s < 500) xor (alim_res_s = 400)) => (result_alt_sep_test_s >= 2));

  p31 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <= 1));

  p32 = (((Up_Separation_s >= alim_res_s) and false) xor (result_alt_sep_test_s >= 0));

  p33 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s >= 0));

  p34 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s > alim_res_s)) => (result_alt_sep_test_s >= 0));

  p35 = (((Up_Separation_s = alim_res_s) and (alim_res_s > 740)) xor (result_alt_sep_test_s >= 0));

  p36 = (((Up_Separation_s >= alim_res_s) => (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s < 2));

  p37 = (((alim_res_s < 500) and (alim_res_s > 400)) => (result_alt_sep_test_s > 2));

  p38 = (((Up_Separation_s >= alim_res_s) => (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p39 = (((alim_res_s > 399) xor (alim_res_s = 739)) or (result_alt_sep_test_s <> 2));

  p40 = (((Down_Separation_s < Up_Separation_s) or (Up_Separation_s <= 399)) => (result_alt_sep_test_s < 2));

  p41 = (((alim_res_s <= Up_Separation_s) => (alim_res_s = 502)) => (result_alt_sep_test_s <> 2));

  p42 = (((Up_Separation_s > alim_res_s) and (Down_Separation_s > alim_res_s)) => (result_alt_sep_test_s >= 0));

  p43 = (((alim_res_s < 400) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s <> 2));

  p44 = (((alim_res_s <= 399) and (Down_Separation_s < alim_res_s)) xor (result_alt_sep_test_s <= 2));

  p45 = (((Up_Separation_s <= 399) or (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p46 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s = alim_res_s)) => (result_alt_sep_test_s = 0));

  p47 = ((false and (Down_Separation_s > alim_res_s)) or (result_alt_sep_test_s <= 2));

  p48 = (((alim_res_s < 500) xor (alim_res_s = 400)) => (result_alt_sep_test_s > 2));

  p49 = (((Up_Separation_s <= Down_Separation_s) and (alim_res_s <= Up_Separation_s)) or (result_alt_sep_test_s <> 2));

  p50 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s > alim_res_s)) => (result_alt_sep_test_s >= 0));

  tight = (p21 => p2);

  --%PROPERTY tight;

tel;
