
node main(pedal_r: int; autoBreak_r: bool; skid_r: bool; NormalPressure_r:int; AltPressure_r:int; Sys_Mode: int) returns ();

var

p1 : bool;
 p3 : bool;
 p6 : bool;
 p7 : bool;
 p8 : bool;
 p9 : bool;
 p10 : bool;
 p11 : bool;
 p12 : bool;
 p13 : bool;
let
    p1 = ((pedal_r > 0 and pedal_r <= 4 and not skid_r) => (AltPressure_r > 0 or NormalPressure_r >0));
    p3 =  ((pedal_r > 0 and pedal_r <= 4 and not skid_r) => (NormalPressure_r > 0));

p6= ((((NormalPressure_r <= 5) and (AltPressure_r = 0)) and ((AltPressure_r < pedal_r) or (NormalPressure_r < 2))) and (((NormalPressure_r < 1) or (not skid_r)) xor ((AltPressure_r = NormalPressure_r) xor (NormalPressure_r <= 0))));
p7= ((((pedal_r > 0) and (pedal_r <= 4)) => (not skid_r)) => ((AltPressure_r <= NormalPressure_r) and (AltPressure_r = 0)));
p8= ((((pedal_r > 0) and (pedal_r < -1)) and (not skid_r)) => ((AltPressure_r > 0) or (AltPressure_r > 0)));
p9= ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => ((AltPressure_r < NormalPressure_r) and (AltPressure_r = 0)));
p10= ((((pedal_r > 9) and (pedal_r < 8)) and (not skid_r)) => ((AltPressure_r > 0) or (NormalPressure_r > 0)));
p11= ((((AltPressure_r <= NormalPressure_r) and (AltPressure_r = 0)) and ((AltPressure_r = 0) and (AltPressure_r = 0))) and (((AltPressure_r = 0) or (pedal_r = -3)) and ((AltPressure_r = 0) and (AltPressure_r = 0))));
p12= ((((pedal_r > 0) and (pedal_r < 1)) and (not skid_r)) => ((AltPressure_r > 0) or (NormalPressure_r < 0)));
p13= ((((AltPressure_r <= NormalPressure_r) and (NormalPressure_r < 6)) and ((AltPressure_r = 0) and (AltPressure_r = 0))) and (((AltPressure_r = 0) and (AltPressure_r = 0)) and ((AltPressure_r = 0) and (AltPressure_r = 0))));
tel;
