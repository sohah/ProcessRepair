node main(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int
) returns (

);
var
  p1 : bool;
  p2 : bool;
  p4 : bool;
  p5 : bool;
  p6 : bool;
  p7 : bool;
  p8 : bool;
  p9 : bool;
  p10 : bool;
  p11 : bool;
  p12 : bool;
  p13 : bool;
  p14 : bool;
  p15 : bool;
  p16 : bool;
  p17 : bool;
  p18 : bool;
  p19 : bool;
  p20 : bool;
  p21 : bool;
  p22 : bool;
  p23 : bool;
  p24 : bool;
  p25 : bool;
  p26 : bool;
  p27 : bool;
  p28 : bool;
  p29 : bool;
  p30 : bool;
  p31 : bool;
  p32 : bool;
  p33 : bool;
  p34 : bool;
  p35 : bool;
  tight : bool;
let
  --%MAIN;
  p1 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p2 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s <> 1));

  p4 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p5 = (((alim_res_s <= Down_Separation_s) or (alim_res_s < 400)) => (result_alt_sep_test_s <> 1));

  p6 = (true => (result_alt_sep_test_s >= 0));

  p7 = (((Up_Separation_s < alim_res_s) and (alim_res_s <= 399)) => false);

  p8 = (((alim_res_s = 640) xor (alim_res_s = 500)) xor ((alim_res_s = 400) or (alim_res_s = 740)));

  p9 = (((Up_Separation_s = Down_Separation_s) => (Up_Separation_s = Down_Separation_s)) => (result_alt_sep_test_s <= 2));

  p10 = (((alim_res_s = 400) xor (alim_res_s = 740)) xor ((alim_res_s = 500) xor (alim_res_s = 640)));

  p11 = (((Down_Separation_s < alim_res_s) => (alim_res_s > 740)) => (result_alt_sep_test_s <> 1));

  p12 = (((alim_res_s < 400) or (Down_Separation_s > 739)) => (result_alt_sep_test_s <> 1));

  p13 = (((result_alt_sep_test_s <= 2) and (alim_res_s > 399)) and ((alim_res_s = 740) xor (alim_res_s < 641)));

  p14 = (((alim_res_s = 640) xor (alim_res_s = 500)) xor ((alim_res_s = 400) xor (alim_res_s = 740)));

  p15 = (true => (result_alt_sep_test_s >= 0));

  p16 = (((alim_res_s > 399) xor (alim_res_s > 740)) and ((result_alt_sep_test_s < 0) xor (result_alt_sep_test_s <= 2)));

  p17 = (((Up_Separation_s < alim_res_s) and (alim_res_s <= 399)) => false);

  p18 = (((Up_Separation_s < alim_res_s) and (alim_res_s <= 399)) => false);

  p19 = (((alim_res_s = 400) xor (alim_res_s <= 499)) => false);

  p20 = (((alim_res_s <= 740) and (alim_res_s > 399)) and ((result_alt_sep_test_s < 0) xor (result_alt_sep_test_s <= 2)));

  p21 = (((alim_res_s = 400) xor (alim_res_s <= 499)) => false);

  p22 = (((alim_res_s = 500) xor (alim_res_s = 640)) xor ((alim_res_s = 400) xor (alim_res_s = 740)));

  p23 = (true => (result_alt_sep_test_s >= 0));

  p24 = (true => (result_alt_sep_test_s >= 0));

  p25 = (((alim_res_s < 400) and (Down_Separation_s >= alim_res_s)) => false);

  p26 = (((alim_res_s <= 740) and (alim_res_s > 399)) and ((result_alt_sep_test_s < 0) xor (result_alt_sep_test_s <= 2)));

  p27 = (((alim_res_s = 400) xor (alim_res_s < 500)) => (result_alt_sep_test_s <> 1));

  p28 = (true => (result_alt_sep_test_s >= 0));

  p29 = (((Up_Separation_s = Down_Separation_s) => (Up_Separation_s = Down_Separation_s)) => (result_alt_sep_test_s >= 0));

  p30 = (((result_alt_sep_test_s > 2) xor (result_alt_sep_test_s >= 0)) and ((alim_res_s <= 499) => (alim_res_s = 400)));

  p31 = (((alim_res_s = 640) xor (alim_res_s = 500)) xor ((alim_res_s = 400) xor (alim_res_s = 740)));

  p32 = (((result_alt_sep_test_s <= 2) xor (result_alt_sep_test_s < 0)) and ((alim_res_s = 400) xor (alim_res_s >= 500)));

  p33 = (((alim_res_s <= 399) and (Down_Separation_s >= alim_res_s)) => false);

  p34 = (((alim_res_s <= 740) and (alim_res_s > 399)) and ((result_alt_sep_test_s < 0) xor (result_alt_sep_test_s <= 2)));

  p35 = (((alim_res_s <= 740) and (alim_res_s >= 400)) and ((result_alt_sep_test_s > 2) xor (result_alt_sep_test_s >= 0)));

  tight = (p21 => p4);

  --%PROPERTY tight;

tel;
