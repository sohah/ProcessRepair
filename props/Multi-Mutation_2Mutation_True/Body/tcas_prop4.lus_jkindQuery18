node main(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int
) returns (

);
var
  p1 : bool;
  p2 : bool;
  p4 : bool;
  p5 : bool;
  p6 : bool;
  p7 : bool;
  p8 : bool;
  p9 : bool;
  p10 : bool;
  p11 : bool;
  p12 : bool;
  p13 : bool;
  p14 : bool;
  p15 : bool;
  p16 : bool;
  p17 : bool;
  p18 : bool;
  p19 : bool;
  p20 : bool;
  p21 : bool;
  p22 : bool;
  p23 : bool;
  p24 : bool;
  p25 : bool;
  p26 : bool;
  p27 : bool;
  p28 : bool;
  p29 : bool;
  matchEquiv : bool;
  loose : bool;
  tight : bool;
  tautology : bool;
let
  --%MAIN;
  p1 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p2 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s <> 1));

  p4 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p5 = (((alim_res_s <= 740) xor (alim_res_s <= result_alt_sep_test_s)) and ((result_alt_sep_test_s <= 2) and (alim_res_s > 399)));

  p6 = (true => (result_alt_sep_test_s >= 0));

  p7 = (((alim_res_s <= 499) xor (alim_res_s = 400)) => false);

  p8 = (((Up_Separation_s <= Down_Separation_s) => (Up_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p9 = (((alim_res_s < 400) and (Down_Separation_s < alim_res_s)) => false);

  p10 = (((alim_res_s <= Up_Separation_s) => (Down_Separation_s < Up_Separation_s)) => (result_alt_sep_test_s <> 2));

  p11 = (((alim_res_s <= 399) and (Down_Separation_s < alim_res_s)) => false);

  p12 = (((alim_res_s = 400) xor (alim_res_s > 499)) and ((result_alt_sep_test_s >= 0) xor (result_alt_sep_test_s > 2)));

  p13 = (((Up_Separation_s >= alim_res_s) and (alim_res_s < 400)) => false);

  p14 = (((result_alt_sep_test_s > 2) => (alim_res_s < 400)) and ((alim_res_s >= 500) xor (alim_res_s = 400)));

  p15 = (((alim_res_s = 400) xor (alim_res_s > 499)) and ((result_alt_sep_test_s >= 0) xor (result_alt_sep_test_s > 2)));

  p16 = (((alim_res_s = 500) xor (alim_res_s = 400)) xor ((alim_res_s = 740) xor (alim_res_s = 640)));

  p17 = (((Up_Separation_s < alim_res_s) and (alim_res_s <= Down_Separation_s)) => (result_alt_sep_test_s <> 2));

  p18 = (((Up_Separation_s <= Down_Separation_s) => (Up_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p19 = (true => (result_alt_sep_test_s >= 0));

  p20 = (((alim_res_s = 400) xor (alim_res_s >= 409)) and ((result_alt_sep_test_s <= 2) and (alim_res_s <= 740)));

  p21 = (((Up_Separation_s >= alim_res_s) and (alim_res_s < 400)) => false);

  p22 = (((alim_res_s <= 499) xor (alim_res_s = 400)) => false);

  p23 = (((alim_res_s = 400) xor (alim_res_s >= 500)) and ((alim_res_s <= 740) and (result_alt_sep_test_s <= 2)));

  p24 = (((alim_res_s <= 499) xor (alim_res_s = 400)) => false);

  p25 = (((alim_res_s < 400) and (Down_Separation_s < alim_res_s)) => false);

  p26 = (true => (result_alt_sep_test_s >= 0));

  p27 = (((alim_res_s = 400) xor (alim_res_s = 740)) xor ((alim_res_s = 500) xor (alim_res_s = 640)));

  p28 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s <= alim_res_s)) => (result_alt_sep_test_s <> 2));

  p29 = (((alim_res_s > 499) xor (alim_res_s = 400)) and ((result_alt_sep_test_s > 2) xor (result_alt_sep_test_s >= 0)));

  matchEquiv = (p4 = p20);

  loose = (p4 => p20);

  tight = (p20 => p4);

  tautology = (p20 = true);

  --%PROPERTY matchEquiv;
  --%PROPERTY loose;
  --%PROPERTY tight;
  --%PROPERTY tautology;

tel;
