node main(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int
) returns (

);
var
  p1 : bool;
  p3 : bool;
  p6 : bool;
  p7 : bool;
  p8 : bool;
  p9 : bool;
  p10 : bool;
  p11 : bool;
  p12 : bool;
  p13 : bool;
  p14 : bool;
  p15 : bool;
  p16 : bool;
  p17 : bool;
  p18 : bool;
  p19 : bool;
  p20 : bool;
  p21 : bool;
  p22 : bool;
  p23 : bool;
  p24 : bool;
  p25 : bool;
  p26 : bool;
  p27 : bool;
  p28 : bool;
  p29 : bool;
  p30 : bool;
  p31 : bool;
  p32 : bool;
  p33 : bool;
  p34 : bool;
  p35 : bool;
  matchEquiv : bool;
  loose : bool;
  tight : bool;
  tautology : bool;
let
  --%MAIN;
  p1 = ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => ((AltPressure_r > 0) or (NormalPressure_r > 0)));

  p3 = ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => (NormalPressure_r > 0));

  p6 = ((((pedal_r <= 4) and (pedal_r >= 1)) and ((not skid_r) and (not skid_r))) => (NormalPressure_r > 0));

  p7 = ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => (NormalPressure_r > 0));

  p8 = (((not skid_r) and (NormalPressure_r = 5)) xor ((NormalPressure_r >= 0) xor (NormalPressure_r >= 4)));

  p9 = ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => (NormalPressure_r > 0));

  p10 = (((NormalPressure_r <= 0) or (not skid_r)) and ((NormalPressure_r <= 5) and (NormalPressure_r >= 0)));

  p11 = (((NormalPressure_r < 6) xor (NormalPressure_r <= (-1))) and (skid_r => (NormalPressure_r = 0)));

  p12 = (((not skid_r) and (pedal_r <= 4)) or ((NormalPressure_r = 1) xor (NormalPressure_r = 0)));

  p13 = ((skid_r => (NormalPressure_r = 0)) and ((NormalPressure_r >= 0) xor (NormalPressure_r = 4)));

  p14 = ((((pedal_r <= 4) and (pedal_r >= 1)) and (not skid_r)) => (NormalPressure_r > 0));

  p15 = ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => (NormalPressure_r > 0));

  p16 = (((NormalPressure_r < 6) xor (NormalPressure_r <= (-1))) and (skid_r => (NormalPressure_r = 0)));

  p17 = (((NormalPressure_r >= 0) xor (NormalPressure_r >= 6)) and (skid_r => (NormalPressure_r = 0)));

  p18 = ((skid_r => (NormalPressure_r = 0)) and ((NormalPressure_r >= 0) xor (NormalPressure_r = 4)));

  p19 = ((((pedal_r > 0) and (pedal_r < 5)) and (not skid_r)) => (NormalPressure_r > 0));

  p20 = (((not skid_r) or (NormalPressure_r = 0)) and ((NormalPressure_r >= 6) xor (NormalPressure_r >= 0)));

  p21 = (((not skid_r) and (NormalPressure_r = 5)) xor ((NormalPressure_r >= 0) xor (NormalPressure_r >= 4)));

  p22 = ((((pedal_r >= 1) and (pedal_r < 5)) and (not skid_r)) => (NormalPressure_r > 0));

  p23 = ((((pedal_r > 0) and (pedal_r < 5)) and (not skid_r)) => (NormalPressure_r > 0));

  p24 = ((((pedal_r <= 4) and (not skid_r)) and ((pedal_r > 0) and (not skid_r))) => (NormalPressure_r > 0));

  p25 = (((not skid_r) and (pedal_r <= 4)) or ((NormalPressure_r = 1) xor (NormalPressure_r = 0)));

  p26 = ((((pedal_r < 5) and (pedal_r >= 1)) and ((not skid_r) and (not skid_r))) => (NormalPressure_r > 0));

  p27 = ((((pedal_r <= 4) and (pedal_r >= 1)) and ((not skid_r) and (not skid_r))) => (NormalPressure_r > 0));

  p28 = ((skid_r => (NormalPressure_r = 0)) and ((NormalPressure_r >= 0) xor (NormalPressure_r = 4)));

  p29 = ((((pedal_r < 5) and (pedal_r >= 1)) and (not skid_r)) => (NormalPressure_r > 0));

  p30 = (((NormalPressure_r = 5) and (not skid_r)) xor ((NormalPressure_r <= (-1)) xor (NormalPressure_r < 4)));

  p31 = (((not skid_r) or (NormalPressure_r = 0)) and ((NormalPressure_r >= 6) xor (NormalPressure_r >= 0)));

  p32 = ((((pedal_r >= 1) and (pedal_r <= 4)) and (not skid_r)) => (NormalPressure_r > 0));

  p33 = ((((pedal_r < 5) and (pedal_r >= 1)) and ((not skid_r) and (not skid_r))) => (NormalPressure_r > 0));

  p34 = (((not skid_r) and (NormalPressure_r = 5)) xor ((NormalPressure_r >= 0) xor (NormalPressure_r >= 4)));

  p35 = (((NormalPressure_r < 6) xor (NormalPressure_r <= (-1))) and (skid_r => (NormalPressure_r = 0)));

  matchEquiv = (p3 = p25);

  loose = (p3 => p25);

  tight = (p25 => p3);

  tautology = (p25 = true);

  --%PROPERTY matchEquiv;
  --%PROPERTY loose;
  --%PROPERTY tight;
  --%PROPERTY tautology;

tel;
