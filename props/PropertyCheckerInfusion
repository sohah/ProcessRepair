
node main(
 System_On: bool;
             Infusion_Initiate:bool;
             Infusion_Inhibit:bool;
             Infusion_Cancel:bool;
             Patient_Bolus_Request:bool;
             Infusion_Total_Duration:int;
             VTBI_Total:int;
             Flow_Rate_Basal:int;
             Flow_Rate_Intermittent_Bolus:int;
             Duration_Intermittent_Bolus:int;
             Interval_Intermittent_Bolus:int;
             Flow_Rate_Patient_Bolus:int;
             Duration_Patient_Bolus:int;
             Lockout_Period_Patient_Bolus:int;
             Max_Number_of_Patient_Bolus:int;
             Flow_Rate_KVO:int;
             Entered_Reservoir_Volume:int;
             Configured:int;
             Highest_Level_Alarm:int;
             Reservoir_Empty:bool;
             Volume_Infused:int;
             Commanded_Flow_Rate:int;
             Current_System_Mode:int;
             New_Infusion:bool;
             Log_Message_ID:int;
             Actual_Infusion_Duration:int
) returns (prop: bool);

var

   p1: bool;
  p2: bool;
  p3: bool;
  p4: bool;
  p5: bool;

let

p1 = ((((Current_System_Mode >= 2) or (Commanded_Flow_Rate = 0)) xor ((Current_System_Mode > 8) xor (Current_System_Mode = 5))) and (((Current_System_Mode < 0) or (Current_System_Mode >= 1)) xor ((Current_System_Mode >= 0) => (not System_On))));
p2 = ((((Current_System_Mode >= 0) xor (Current_System_Mode > 6)) => ((Current_System_Mode < 1) xor (not System_On))) => (Commanded_Flow_Rate <= Flow_Rate_KVO));
p3 = ((System_On and (((Current_System_Mode = 6) xor (Current_System_Mode < 1)) xor ((Current_System_Mode >= 5) and (Current_System_Mode >= 2)))) => (Commanded_Flow_Rate <= Flow_Rate_KVO));
p4 = ((System_On and (((Current_System_Mode <= 0) xor (Current_System_Mode >= 7)) or (Current_System_Mode = 8))) => (Commanded_Flow_Rate <= Flow_Rate_KVO));
p5 = ((System_On and (((Current_System_Mode > 6) or (Current_System_Mode = 7)) or (Current_System_Mode = 8))) => (Commanded_Flow_Rate <= Flow_Rate_KVO));

prop = (p5) ;

  --%PROPERTY prop;

tel;
