node main(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int
) returns (

);
var
  p1 : bool;
  p2 : bool;
  p4 : bool;
  p5 : bool;
  p6 : bool;
  p7 : bool;
  p8 : bool;
  p9 : bool;
  p10 : bool;
  p11 : bool;
  p12 : bool;
  p13 : bool;
  p14 : bool;
  p15 : bool;
  p16 : bool;
  p17 : bool;
  p18 : bool;
  p19 : bool;
  p20 : bool;
  p21 : bool;
  p22 : bool;
  p23 : bool;
  p24 : bool;
  p25 : bool;
  matchEquiv : bool;
  loose : bool;
  tight : bool;
  tautology : bool;
let
  --%MAIN;
  p1 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p2 = (((Up_Separation_s < alim_res_s) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s <> 1));

  p4 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s < alim_res_s)) => (result_alt_sep_test_s <> 2));

  p5 = (((alim_res_s <= 499) and (alim_res_s >= 401)) => (result_alt_sep_test_s > 1));

  p6 = (((alim_res_s <= 740) and (Down_Separation_s < alim_res_s)) or (result_alt_sep_test_s <> 1));

  p7 = (((Up_Separation_s >= alim_res_s) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s >= 0));

  p8 = (((Up_Separation_s > alim_res_s) and (alim_res_s > 740)) => false);

  p9 = (((alim_res_s = 402) and (Down_Separation_s <> alim_res_s)) => (result_alt_sep_test_s <> 1));

  p10 = ((((alim_res_s < 641) xor (alim_res_s = 740)) => ((alim_res_s = 400) xor (alim_res_s < 500))) => (result_alt_sep_test_s = 1));

  p11 = ((((alim_res_s = 640) or (alim_res_s = 740)) xor ((alim_res_s = 400) xor (alim_res_s = 500))) xor false);

  p12 = (((alim_res_s <= 740) or (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s <= 2));

  p13 = ((((alim_res_s >= 401) xor (alim_res_s = 640)) xor ((alim_res_s = 740) xor (alim_res_s = 500))) => (result_alt_sep_test_s < 1));

  p14 = (((alim_res_s <= 740) => (Down_Separation_s > alim_res_s)) => (result_alt_sep_test_s <> 1));

  p15 = (((Up_Separation_s < alim_res_s) and (alim_res_s = 464)) => (result_alt_sep_test_s = 1));

  p16 = ((false and (Down_Separation_s <= alim_res_s)) or (result_alt_sep_test_s <= 2));

  p17 = ((((alim_res_s = 400) xor (alim_res_s = 640)) xor ((alim_res_s = 500) xor (alim_res_s < 740))) => (result_alt_sep_test_s >= 1));

  p18 = (((alim_res_s = 399) and (Down_Separation_s >= alim_res_s)) xor (result_alt_sep_test_s <= 2));

  p19 = ((((alim_res_s = 740) or (alim_res_s = 640)) xor ((alim_res_s = 500) xor (alim_res_s = 400))) or (result_alt_sep_test_s > 1));

  p20 = ((((alim_res_s < 400) and (Up_Separation_s < 401)) xor ((alim_res_s <= 397) and (Up_Separation_s <= alim_res_s))) xor (result_alt_sep_test_s <= 2));

  p21 = (((alim_res_s < 400) and (Down_Separation_s <> alim_res_s)) => false);

  p22 = (((alim_res_s = 402) and (Down_Separation_s >= alim_res_s)) => (result_alt_sep_test_s > 1));

  p23 = ((false and (Down_Separation_s >= alim_res_s)) xor (result_alt_sep_test_s <= 2));

  p24 = (((Up_Separation_s < alim_res_s) and false) xor (result_alt_sep_test_s >= 0));

  p25 = (((alim_res_s < 500) and (alim_res_s > 400)) => (result_alt_sep_test_s >= 1));

  matchEquiv = (p2 = p17);

  loose = (p2 => p17);

  tight = (p17 => p2);

  tautology = (p17 = true);

  --%PROPERTY matchEquiv;
  --%PROPERTY loose;
  --%PROPERTY tight;
  --%PROPERTY tautology;

tel;
