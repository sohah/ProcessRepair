node Ranger_node(
  Cur_Vertical_Sep_1_SYMINT : int;
  High_Confidence_flag_2_SYMINT : int;
  Two_of_Three_Reports_Valid_flag_3_SYMINT : int;
  Own_Tracked_Alt_4_SYMINT : int;
  Own_Tracked_Alt_Rate_5_SYMINT : int;
  Other_Tracked_Alt_6_SYMINT : int;
  Alt_Layer_Value_7_SYMINT : int;
  Up_Separation_8_SYMINT : int;
  Down_Separation_9_SYMINT : int;
  Other_RAC_10_SYMINT : int;
  Other_Capability_11_SYMINT : int;
  Climb_Inhibit_12_SYMINT : int
) returns (
  r_1_result_alt_sep_test_1_3_33 : int;
  r_1_alim_res_1_3_33 : int
);
var
  r_1_Positive_RA_Alt_Thresh_0_1_1_33 : int;
  r_1_Positive_RA_Alt_Thresh_1_1_1_33 : int;
  r_1_Positive_RA_Alt_Thresh_2_1_1_33 : int;
  r_1_Positive_RA_Alt_Thresh_3_1_1_33 : int;
  r_1_Cur_Vertical_Sep_1_1_33 : int;
  r_1_High_Confidence_1_1_33 : int;
  r_1_High_Confidence_1_2_33 : int;
  r_1_High_Confidence_1_3_33 : int;
  r_1_Two_of_Three_Reports_Valid_1_1_33 : int;
  r_1_Two_of_Three_Reports_Valid_1_2_33 : int;
  r_1_Two_of_Three_Reports_Valid_1_3_33 : int;
  r_1_Own_Tracked_Alt_1_1_33 : int;
  r_1_Own_Tracked_Alt_Rate_1_1_33 : int;
  r_1_Other_Tracked_Alt_1_1_33 : int;
  r_1_Alt_Layer_Value_1_1_33 : int;
  r_1_Up_Separation_1_1_33 : int;
  r_1_Down_Separation_1_1_33 : int;
  r_1_Other_RAC_1_1_33 : int;
  r_1_Other_Capability_1_1_33 : int;
  r_1_Climb_Inhibit_1_1_33 : int;
  w3_4 : int;
  w4_4 : int;
  w5_4 : int;
  w6_4 : int;
  w7_4 : int;
  w8_4 : int;
  w10_4 : int;
  w11_4 : int;
  w12_4 : int;
  w13_4 : int;
  w14_4 : int;
  w15_4 : int;
  w16_4 : int;
  w17_4 : int;
  w2_5 : int;
  w2_7 : int;
  w7_7 : int;
  w4_7 : int;
  w5_7 : int;
  w6_7 : int;
  w8_7 : int;
  w3_6 : int;
  w4_6 : int;
  w7_6 : int;
  w2_8 : int;
  w4_8 : int;
  w5_8 : int;
  w7_8 : int;
  w8_8 : int;
  w11_8 : int;
  w10_8 : int;
  w12_8 : int;
  w9_6 : int;
  w10_6 : int;
  w11_6 : int;
  w12_6 : int;
  w13_6 : int;
  w2_9 : int;
  w4_9 : int;
  w5_9 : int;
  w7_9 : int;
  w8_9 : int;
  w11_9 : int;
  w10_9 : int;
  w12_9 : int;
  w15_6 : int;
  w16_6 : int;
  w3_10 : int;
  w4_10 : int;
  w6_10 : int;
  w18_6 : int;
  w19_6 : int;
  w5_5 : int;
  w3_11 : int;
  w4_11 : int;
  w6_11 : int;
  w7_5 : int;
  w9_5 : int;
  w2_13 : int;
  w7_13 : int;
  w4_13 : int;
  w5_13 : int;
  w6_13 : int;
  w8_13 : int;
  w3_12 : int;
  w4_12 : int;
  w7_12 : int;
  w2_14 : int;
  w4_14 : int;
  w5_14 : int;
  w7_14 : int;
  w8_14 : int;
  w11_14 : int;
  w10_14 : int;
  w12_14 : int;
  w17_12 : int;
  w3_15 : int;
  w4_15 : int;
  w6_15 : int;
  w19_12 : int;
  w20_12 : int;
  w2_16 : int;
  w4_16 : int;
  w5_16 : int;
  w7_16 : int;
  w8_16 : int;
  w11_16 : int;
  w10_16 : int;
  w12_16 : int;
  w9_12 : int;
  w3_17 : int;
  w4_17 : int;
  w6_17 : int;
  w11_12 : int;
  w12_12 : int;
  w13_12 : int;
  w14_12 : int;
  w15_12 : int;
  w21_12 : int;
  w11_5 : int;
  w3_18 : int;
  w4_18 : int;
  w6_18 : int;
  w13_5 : int;
  w14_5 : int;
  w17_5 : int;
  w18_5 : int;
  w16_5 : int;
  w15_5 : int;
  w19_5 : int;
  w19_4 : int;
  w2_19 : int;
  w2_21 : int;
  w7_21 : int;
  w4_21 : int;
  w5_21 : int;
  w6_21 : int;
  w8_21 : int;
  w3_20 : int;
  w4_20 : int;
  w7_20 : int;
  w2_22 : int;
  w4_22 : int;
  w5_22 : int;
  w7_22 : int;
  w8_22 : int;
  w11_22 : int;
  w10_22 : int;
  w12_22 : int;
  w9_20 : int;
  w10_20 : int;
  w11_20 : int;
  w12_20 : int;
  w13_20 : int;
  w2_23 : int;
  w4_23 : int;
  w5_23 : int;
  w7_23 : int;
  w8_23 : int;
  w11_23 : int;
  w10_23 : int;
  w12_23 : int;
  w15_20 : int;
  w16_20 : int;
  w3_24 : int;
  w4_24 : int;
  w6_24 : int;
  w18_20 : int;
  w19_20 : int;
  w5_19 : int;
  w3_25 : int;
  w4_25 : int;
  w6_25 : int;
  w7_19 : int;
  w9_19 : int;
  w2_27 : int;
  w7_27 : int;
  w4_27 : int;
  w5_27 : int;
  w6_27 : int;
  w8_27 : int;
  w3_26 : int;
  w4_26 : int;
  w7_26 : int;
  w2_28 : int;
  w4_28 : int;
  w5_28 : int;
  w7_28 : int;
  w8_28 : int;
  w11_28 : int;
  w10_28 : int;
  w12_28 : int;
  w17_26 : int;
  w3_29 : int;
  w4_29 : int;
  w6_29 : int;
  w19_26 : int;
  w20_26 : int;
  w2_30 : int;
  w4_30 : int;
  w5_30 : int;
  w7_30 : int;
  w8_30 : int;
  w11_30 : int;
  w10_30 : int;
  w12_30 : int;
  w9_26 : int;
  w3_31 : int;
  w4_31 : int;
  w6_31 : int;
  w11_26 : int;
  w12_26 : int;
  w13_26 : int;
  w14_26 : int;
  w15_26 : int;
  w21_26 : int;
  w11_19 : int;
  w3_32 : int;
  w4_32 : int;
  w6_32 : int;
  w13_19 : int;
  w14_19 : int;
  w17_19 : int;
  w18_19 : int;
  w16_19 : int;
  w15_19 : int;
  w19_19 : int;
  w21_4 : int;
  w24_4 : int;
  w18_2 : int;
  r_1_result_alt_sep_test_1_1_33 : int;
  w2_33 : int;
  w4_33 : int;
  w5_33 : int;
  w7_33 : int;
  w8_33 : int;
  w11_33 : int;
  w10_33 : int;
  w12_33 : int;
  w20_2 : int;
  r_1_alim_res_1_1_33 : int;
  r_1_Up_Separation_1_3_33 : int;
  r_1_Own_Tracked_Alt_1_3_33 : int;
  r_1_Alt_Layer_Value_1_3_33 : int;
  r_1_Positive_RA_Alt_Thresh_1_1_3_33 : int;
  r_1_Cur_Vertical_Sep_1_3_33 : int;
  r_1_Two_of_Three_Reports_Valid_1_5_33 : int;
  r_1_Positive_RA_Alt_Thresh_2_1_3_33 : int;
  r_1_Other_RAC_1_3_33 : int;
  r_1_Climb_Inhibit_1_3_33 : int;
  r_1_Own_Tracked_Alt_Rate_1_3_33 : int;
  r_1_Positive_RA_Alt_Thresh_0_1_3_33 : int;
  r_1_Other_Tracked_Alt_1_3_33 : int;
  r_1_Down_Separation_1_3_33 : int;
  r_1_High_Confidence_1_5_33 : int;
  r_1_Positive_RA_Alt_Thresh_3_1_3_33 : int;
  r_1_Other_Capability_1_3_33 : int;
  symVar_13_SYMINT : int;
let
  r_1_Positive_RA_Alt_Thresh_0_1_1_33 = 400;

  r_1_Positive_RA_Alt_Thresh_1_1_1_33 = 500;

  r_1_Positive_RA_Alt_Thresh_2_1_1_33 = 640;

  r_1_Positive_RA_Alt_Thresh_3_1_1_33 = 740;

  r_1_Cur_Vertical_Sep_1_1_33 = Cur_Vertical_Sep_1_SYMINT;

  r_1_High_Confidence_1_1_33 = 0;

  r_1_High_Confidence_1_2_33 = 1;

  r_1_High_Confidence_1_3_33 = (if (not (High_Confidence_flag_2_SYMINT <> 0)) then r_1_High_Confidence_1_1_33 else r_1_High_Confidence_1_2_33);

  r_1_Two_of_Three_Reports_Valid_1_1_33 = 0;

  r_1_Two_of_Three_Reports_Valid_1_2_33 = 1;

  r_1_Two_of_Three_Reports_Valid_1_3_33 = (if (not (Two_of_Three_Reports_Valid_flag_3_SYMINT <> 0)) then r_1_Two_of_Three_Reports_Valid_1_1_33 else r_1_Two_of_Three_Reports_Valid_1_2_33);

  r_1_Own_Tracked_Alt_1_1_33 = Own_Tracked_Alt_4_SYMINT;

  r_1_Own_Tracked_Alt_Rate_1_1_33 = Own_Tracked_Alt_Rate_5_SYMINT;

  r_1_Other_Tracked_Alt_1_1_33 = Other_Tracked_Alt_6_SYMINT;

  r_1_Alt_Layer_Value_1_1_33 = Alt_Layer_Value_7_SYMINT;

  r_1_Up_Separation_1_1_33 = Up_Separation_8_SYMINT;

  r_1_Down_Separation_1_1_33 = Down_Separation_9_SYMINT;

  r_1_Other_RAC_1_1_33 = Other_RAC_10_SYMINT;

  r_1_Other_Capability_1_1_33 = Other_Capability_11_SYMINT;

  r_1_Climb_Inhibit_1_1_33 = Climb_Inhibit_12_SYMINT;

  w3_4 = 0;

  w4_4 = r_1_High_Confidence_1_3_33;

  w5_4 = r_1_Own_Tracked_Alt_Rate_1_1_33;

  w6_4 = 600;

  w7_4 = r_1_Cur_Vertical_Sep_1_1_33;

  w8_4 = 300;

  w10_4 = (if (not (w4_4 = 0)) then (if (not (w5_4 > w6_4)) then (if (not (w7_4 <= w8_4)) then 1 else 0) else 0) else 0);

  w11_4 = r_1_Other_Capability_1_1_33;

  w12_4 = 1;

  w13_4 = (if (not (w11_4 <> w12_4)) then 1 else 0);

  w14_4 = r_1_Two_of_Three_Reports_Valid_1_3_33;

  w15_4 = r_1_Other_RAC_1_1_33;

  w16_4 = 0;

  w17_4 = (if (not (w14_4 = 0)) then (if (not (w15_4 <> w16_4)) then 1 else 0) else 0);

  w2_5 = 0;

  w2_7 = r_1_Climb_Inhibit_1_1_33;

  w7_7 = r_1_Up_Separation_1_1_33;

  w4_7 = r_1_Up_Separation_1_1_33;

  w5_7 = 100;

  w6_7 = (w4_7 + w5_7);

  w8_7 = (if (w2_7 <= 0) then w7_7 else w6_7);

  w3_6 = w8_7;

  w4_6 = r_1_Down_Separation_1_1_33;

  w7_6 = (if (w3_6 <= w4_6) then 0 else 1);

  w2_8 = r_1_Alt_Layer_Value_1_1_33;

  w4_8 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_8 = r_1_Alt_Layer_Value_1_1_33;

  w7_8 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_8 = r_1_Alt_Layer_Value_1_1_33;

  w11_8 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_8 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_8 = (if (not (w2_8 <> 0)) then w4_8 else (if (not (w5_8 <> 1)) then w7_8 else (if (w8_8 <> 2) then w11_8 else w10_8)));

  w9_6 = w12_8;

  w10_6 = r_1_Down_Separation_1_1_33;

  w11_6 = (if (not (w10_6 >= w9_6)) then 1 else 0);

  w12_6 = r_1_Cur_Vertical_Sep_1_1_33;

  w13_6 = 600;

  w2_9 = r_1_Alt_Layer_Value_1_1_33;

  w4_9 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_9 = r_1_Alt_Layer_Value_1_1_33;

  w7_9 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_9 = r_1_Alt_Layer_Value_1_1_33;

  w11_9 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_9 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_9 = (if (not (w2_9 <> 0)) then w4_9 else (if (not (w5_9 <> 1)) then w7_9 else (if (w8_9 <> 2) then w11_9 else w10_9)));

  w15_6 = w12_9;

  w16_6 = r_1_Up_Separation_1_1_33;

  w3_10 = r_1_Other_Tracked_Alt_1_1_33;

  w4_10 = r_1_Own_Tracked_Alt_1_1_33;

  w6_10 = (if (not (w3_10 >= w4_10)) then 1 else 0);

  w18_6 = w6_10;

  w19_6 = (if (not (w7_6 = 0)) then w11_6 else (if (not (w12_6 >= w13_6)) then 0 else (if (not (w16_6 >= w15_6)) then 0 else (if (w18_6 <> 0) then 1 else 0))));

  w5_5 = w19_6;

  w3_11 = r_1_Own_Tracked_Alt_1_1_33;

  w4_11 = r_1_Other_Tracked_Alt_1_1_33;

  w6_11 = (if (not (w3_11 >= w4_11)) then 1 else 0);

  w7_5 = w6_11;

  w9_5 = (if (not (w5_5 = 0)) then (if (not (w7_5 = 0)) then 1 else 0) else 0);

  w2_13 = r_1_Climb_Inhibit_1_1_33;

  w7_13 = r_1_Up_Separation_1_1_33;

  w4_13 = r_1_Up_Separation_1_1_33;

  w5_13 = 100;

  w6_13 = (w4_13 + w5_13);

  w8_13 = (if (w2_13 <= 0) then w7_13 else w6_13);

  w3_12 = w8_13;

  w4_12 = r_1_Down_Separation_1_1_33;

  w7_12 = (if (w3_12 <= w4_12) then 0 else 1);

  w2_14 = r_1_Alt_Layer_Value_1_1_33;

  w4_14 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_14 = r_1_Alt_Layer_Value_1_1_33;

  w7_14 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_14 = r_1_Alt_Layer_Value_1_1_33;

  w11_14 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_14 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_14 = (if (not (w2_14 <> 0)) then w4_14 else (if (not (w5_14 <> 1)) then w7_14 else (if (w8_14 <> 2) then w11_14 else w10_14)));

  w17_12 = w12_14;

  w3_15 = r_1_Other_Tracked_Alt_1_1_33;

  w4_15 = r_1_Own_Tracked_Alt_1_1_33;

  w6_15 = (if (not (w3_15 >= w4_15)) then 1 else 0);

  w19_12 = w6_15;

  w20_12 = r_1_Up_Separation_1_1_33;

  w2_16 = r_1_Alt_Layer_Value_1_1_33;

  w4_16 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_16 = r_1_Alt_Layer_Value_1_1_33;

  w7_16 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_16 = r_1_Alt_Layer_Value_1_1_33;

  w11_16 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_16 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_16 = (if (not (w2_16 <> 0)) then w4_16 else (if (not (w5_16 <> 1)) then w7_16 else (if (w8_16 <> 2) then w11_16 else w10_16)));

  w9_12 = w12_16;

  w3_17 = r_1_Own_Tracked_Alt_1_1_33;

  w4_17 = r_1_Other_Tracked_Alt_1_1_33;

  w6_17 = (if (not (w3_17 >= w4_17)) then 1 else 0);

  w11_12 = w6_17;

  w12_12 = r_1_Cur_Vertical_Sep_1_1_33;

  w13_12 = 600;

  w14_12 = r_1_Down_Separation_1_1_33;

  w15_12 = (if (w12_12 >= w13_12) then (if (not (w14_12 >= w9_12)) then 0 else (if (w11_12 <> 0) then 1 else 0)) else 0);

  w21_12 = (if (w7_12 = 0) then (if (not (w20_12 >= w17_12)) then 0 else (if (w19_12 <> 0) then 1 else 0)) else w15_12);

  w11_5 = w21_12;

  w3_18 = r_1_Other_Tracked_Alt_1_1_33;

  w4_18 = r_1_Own_Tracked_Alt_1_1_33;

  w6_18 = (if (not (w3_18 >= w4_18)) then 1 else 0);

  w13_5 = w6_18;

  w14_5 = (if (not (w11_5 = 0)) then (if (not (w13_5 = 0)) then 1 else 0) else 0);

  w17_5 = 2;

  w18_5 = 0;

  w16_5 = 1;

  w15_5 = 0;

  w19_5 = (if (w9_5 = 0) then (if (not (w14_5 = 0)) then w17_5 else w18_5) else (if (w14_5 = 0) then w16_5 else w15_5));

  w19_4 = w19_5;

  w2_19 = 0;

  w2_21 = r_1_Climb_Inhibit_1_1_33;

  w7_21 = r_1_Up_Separation_1_1_33;

  w4_21 = r_1_Up_Separation_1_1_33;

  w5_21 = 100;

  w6_21 = (w4_21 + w5_21);

  w8_21 = (if (w2_21 <= 0) then w7_21 else w6_21);

  w3_20 = w8_21;

  w4_20 = r_1_Down_Separation_1_1_33;

  w7_20 = (if (w3_20 <= w4_20) then 0 else 1);

  w2_22 = r_1_Alt_Layer_Value_1_1_33;

  w4_22 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_22 = r_1_Alt_Layer_Value_1_1_33;

  w7_22 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_22 = r_1_Alt_Layer_Value_1_1_33;

  w11_22 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_22 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_22 = (if (not (w2_22 <> 0)) then w4_22 else (if (not (w5_22 <> 1)) then w7_22 else (if (w8_22 <> 2) then w11_22 else w10_22)));

  w9_20 = w12_22;

  w10_20 = r_1_Down_Separation_1_1_33;

  w11_20 = (if (not (w10_20 >= w9_20)) then 1 else 0);

  w12_20 = r_1_Cur_Vertical_Sep_1_1_33;

  w13_20 = 600;

  w2_23 = r_1_Alt_Layer_Value_1_1_33;

  w4_23 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_23 = r_1_Alt_Layer_Value_1_1_33;

  w7_23 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_23 = r_1_Alt_Layer_Value_1_1_33;

  w11_23 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_23 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_23 = (if (not (w2_23 <> 0)) then w4_23 else (if (not (w5_23 <> 1)) then w7_23 else (if (w8_23 <> 2) then w11_23 else w10_23)));

  w15_20 = w12_23;

  w16_20 = r_1_Up_Separation_1_1_33;

  w3_24 = r_1_Other_Tracked_Alt_1_1_33;

  w4_24 = r_1_Own_Tracked_Alt_1_1_33;

  w6_24 = (if (not (w3_24 >= w4_24)) then 1 else 0);

  w18_20 = w6_24;

  w19_20 = (if (not (w7_20 = 0)) then w11_20 else (if (not (w12_20 >= w13_20)) then 0 else (if (not (w16_20 >= w15_20)) then 0 else (if (w18_20 <> 0) then 1 else 0))));

  w5_19 = w19_20;

  w3_25 = r_1_Own_Tracked_Alt_1_1_33;

  w4_25 = r_1_Other_Tracked_Alt_1_1_33;

  w6_25 = (if (not (w3_25 >= w4_25)) then 1 else 0);

  w7_19 = w6_25;

  w9_19 = (if (not (w5_19 = 0)) then (if (not (w7_19 = 0)) then 1 else 0) else 0);

  w2_27 = r_1_Climb_Inhibit_1_1_33;

  w7_27 = r_1_Up_Separation_1_1_33;

  w4_27 = r_1_Up_Separation_1_1_33;

  w5_27 = 100;

  w6_27 = (w4_27 + w5_27);

  w8_27 = (if (w2_27 <= 0) then w7_27 else w6_27);

  w3_26 = w8_27;

  w4_26 = r_1_Down_Separation_1_1_33;

  w7_26 = (if (w3_26 <= w4_26) then 0 else 1);

  w2_28 = r_1_Alt_Layer_Value_1_1_33;

  w4_28 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_28 = r_1_Alt_Layer_Value_1_1_33;

  w7_28 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_28 = r_1_Alt_Layer_Value_1_1_33;

  w11_28 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_28 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_28 = (if (not (w2_28 <> 0)) then w4_28 else (if (not (w5_28 <> 1)) then w7_28 else (if (w8_28 <> 2) then w11_28 else w10_28)));

  w17_26 = w12_28;

  w3_29 = r_1_Other_Tracked_Alt_1_1_33;

  w4_29 = r_1_Own_Tracked_Alt_1_1_33;

  w6_29 = (if (not (w3_29 >= w4_29)) then 1 else 0);

  w19_26 = w6_29;

  w20_26 = r_1_Up_Separation_1_1_33;

  w2_30 = r_1_Alt_Layer_Value_1_1_33;

  w4_30 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_30 = r_1_Alt_Layer_Value_1_1_33;

  w7_30 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_30 = r_1_Alt_Layer_Value_1_1_33;

  w11_30 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_30 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_30 = (if (not (w2_30 <> 0)) then w4_30 else (if (not (w5_30 <> 1)) then w7_30 else (if (w8_30 <> 2) then w11_30 else w10_30)));

  w9_26 = w12_30;

  w3_31 = r_1_Own_Tracked_Alt_1_1_33;

  w4_31 = r_1_Other_Tracked_Alt_1_1_33;

  w6_31 = (if (not (w3_31 >= w4_31)) then 1 else 0);

  w11_26 = w6_31;

  w12_26 = r_1_Cur_Vertical_Sep_1_1_33;

  w13_26 = 600;

  w14_26 = r_1_Down_Separation_1_1_33;

  w15_26 = (if (w12_26 >= w13_26) then (if (not (w14_26 >= w9_26)) then 0 else (if (w11_26 <> 0) then 1 else 0)) else 0);

  w21_26 = (if (w7_26 = 0) then (if (not (w20_26 >= w17_26)) then 0 else (if (w19_26 <> 0) then 1 else 0)) else w15_26);

  w11_19 = w21_26;

  w3_32 = r_1_Other_Tracked_Alt_1_1_33;

  w4_32 = r_1_Own_Tracked_Alt_1_1_33;

  w6_32 = (if (not (w3_32 >= w4_32)) then 1 else 0);

  w13_19 = w6_32;

  w14_19 = (if (not (w11_19 = 0)) then (if (not (w13_19 = 0)) then 1 else 0) else 0);

  w17_19 = 2;

  w18_19 = 0;

  w16_19 = 1;

  w15_19 = 0;

  w19_19 = (if (w9_19 = 0) then (if (not (w14_19 = 0)) then w17_19 else w18_19) else (if (w14_19 = 0) then w16_19 else w15_19));

  w21_4 = w19_19;

  w24_4 = (if (not (w10_4 = 0)) then (if (not (w13_4 = 0)) then (if (not (w17_4 = 0)) then w19_4 else w3_4) else w21_4) else w3_4);

  w18_2 = w24_4;

  r_1_result_alt_sep_test_1_1_33 = w18_2;

  w2_33 = r_1_Alt_Layer_Value_1_1_33;

  w4_33 = r_1_Positive_RA_Alt_Thresh_0_1_1_33;

  w5_33 = r_1_Alt_Layer_Value_1_1_33;

  w7_33 = r_1_Positive_RA_Alt_Thresh_1_1_1_33;

  w8_33 = r_1_Alt_Layer_Value_1_1_33;

  w11_33 = r_1_Positive_RA_Alt_Thresh_3_1_1_33;

  w10_33 = r_1_Positive_RA_Alt_Thresh_2_1_1_33;

  w12_33 = (if (not (w2_33 <> 0)) then w4_33 else (if (not (w5_33 <> 1)) then w7_33 else (if (w8_33 <> 2) then w11_33 else w10_33)));

  w20_2 = w12_33;

  r_1_alim_res_1_1_33 = w20_2;

  r_1_Up_Separation_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Up_Separation_1_1_33 else 0);

  r_1_Own_Tracked_Alt_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Own_Tracked_Alt_1_1_33 else 0);

  r_1_result_alt_sep_test_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_result_alt_sep_test_1_1_33 else 0);

  r_1_Alt_Layer_Value_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Alt_Layer_Value_1_1_33 else 0);

  r_1_Positive_RA_Alt_Thresh_1_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Positive_RA_Alt_Thresh_1_1_1_33 else 0);

  r_1_Cur_Vertical_Sep_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Cur_Vertical_Sep_1_1_33 else 0);

  r_1_Two_of_Three_Reports_Valid_1_5_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Two_of_Three_Reports_Valid_1_3_33 else 0);

  r_1_Positive_RA_Alt_Thresh_2_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Positive_RA_Alt_Thresh_2_1_1_33 else 0);

  r_1_Other_RAC_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Other_RAC_1_1_33 else 0);

  r_1_Climb_Inhibit_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Climb_Inhibit_1_1_33 else 0);

  r_1_alim_res_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_alim_res_1_1_33 else 0);

  r_1_Own_Tracked_Alt_Rate_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Own_Tracked_Alt_Rate_1_1_33 else 0);

  r_1_Positive_RA_Alt_Thresh_0_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Positive_RA_Alt_Thresh_0_1_1_33 else 0);

  r_1_Other_Tracked_Alt_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Other_Tracked_Alt_1_1_33 else 0);

  r_1_Down_Separation_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Down_Separation_1_1_33 else 0);

  r_1_High_Confidence_1_5_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_High_Confidence_1_3_33 else 0);

  r_1_Positive_RA_Alt_Thresh_3_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Positive_RA_Alt_Thresh_3_1_1_33 else 0);

  r_1_Other_Capability_1_3_33 = (if (not (symVar_13_SYMINT = 0)) then r_1_Other_Capability_1_1_33 else 0);

  symVar_13_SYMINT = 1;

tel;

node Ranger_wrapper(
  Cur_Vertical_Sep_1_SYMINT : int;
  High_Confidence_flag_2_SYMINT : int;
  Two_of_Three_Reports_Valid_flag_3_SYMINT : int;
  Own_Tracked_Alt_4_SYMINT : int;
  Own_Tracked_Alt_Rate_5_SYMINT : int;
  Other_Tracked_Alt_6_SYMINT : int;
  Alt_Layer_Value_7_SYMINT : int;
  Up_Separation_8_SYMINT : int;
  Down_Separation_9_SYMINT : int;
  Other_RAC_10_SYMINT : int;
  Other_Capability_11_SYMINT : int;
  Climb_Inhibit_12_SYMINT : int
) returns (
  out_0 : int;
  out_1 : int
);
let
  out_0, out_1 = Ranger_node(Cur_Vertical_Sep_1_SYMINT, High_Confidence_flag_2_SYMINT, Two_of_Three_Reports_Valid_flag_3_SYMINT, Own_Tracked_Alt_4_SYMINT, Own_Tracked_Alt_Rate_5_SYMINT, Other_Tracked_Alt_6_SYMINT, Alt_Layer_Value_7_SYMINT, Up_Separation_8_SYMINT, Down_Separation_9_SYMINT, Other_RAC_10_SYMINT, Other_Capability_11_SYMINT, Climb_Inhibit_12_SYMINT);

tel;

node T_node(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int
) returns (
  p1 : bool
);
let
  p1 = (((Up_Separation_s = alim_res_s) and false) xor (result_alt_sep_test_s <= 2));

tel;

node Candidate_T_Prime(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int
) returns (
  p1 : bool
);
let
  p1 = (((Up_Separation_s = alim_res_s) and (alim_res_s = 208)) xor (result_alt_sep_test_s <= 2));

tel;

node main(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s__ : int;
  alim_res_s__ : int
) returns (
  discovery_out : bool
);
var
  result_alt_sep_test_s : int;
  alim_res_s : int;
  isMatchImpl : bool;
  isTighter : bool;
let
  --%MAIN;
  result_alt_sep_test_s, alim_res_s = Ranger_wrapper(Cur_Vertical_Sep_s, High_Confidence_flag_s, Two_of_Three_Reports_Valid_flag_s, Own_Tracked_Alt_s, Own_Tracked_Alt_Rate_s, Other_Tracked_Alt_s, Alt_Layer_Value_s, Up_Separation_s, Down_Separation_s, Other_RAC_s, Other_Capability_s, Climb_Inhibit_s);

  isMatchImpl = Candidate_T_Prime(Cur_Vertical_Sep_s, High_Confidence_flag_s, Two_of_Three_Reports_Valid_flag_s, Own_Tracked_Alt_s, Own_Tracked_Alt_Rate_s, Other_Tracked_Alt_s, Alt_Layer_Value_s, Up_Separation_s, Down_Separation_s, Other_RAC_s, Other_Capability_s, Climb_Inhibit_s, result_alt_sep_test_s, alim_res_s);

  isTighter = (Candidate_T_Prime(Cur_Vertical_Sep_s, High_Confidence_flag_s, Two_of_Three_Reports_Valid_flag_s, Own_Tracked_Alt_s, Own_Tracked_Alt_Rate_s, Other_Tracked_Alt_s, Alt_Layer_Value_s, Up_Separation_s, Down_Separation_s, Other_RAC_s, Other_Capability_s, Climb_Inhibit_s, result_alt_sep_test_s__, alim_res_s__) => T_node(Cur_Vertical_Sep_s, High_Confidence_flag_s, Two_of_Three_Reports_Valid_flag_s, Own_Tracked_Alt_s, Own_Tracked_Alt_Rate_s, Other_Tracked_Alt_s, Alt_Layer_Value_s, Up_Separation_s, Down_Separation_s, Other_RAC_s, Other_Capability_s, Climb_Inhibit_s, result_alt_sep_test_s__, alim_res_s__));

  discovery_out = (isMatchImpl and isTighter);

  --%PROPERTY discovery_out;

tel;
