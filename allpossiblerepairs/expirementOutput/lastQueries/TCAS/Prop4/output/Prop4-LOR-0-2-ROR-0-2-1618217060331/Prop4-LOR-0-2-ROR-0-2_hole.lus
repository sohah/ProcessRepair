node T_node(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_5_5 : int;
  const_hole_6_6 : int;
  inner_hole_7_7 : int;
  const_hole_8_8 : int;
  inner_hole_9_9 : int;
  inner_hole_10_10 : int
) returns (
  p1 : bool
);
let
  p1 = repairNode_15_0(alim_res_s, Up_Separation_s, Down_Separation_s, result_alt_sep_test_s, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_5_5, const_hole_6_6, inner_hole_7_7, const_hole_8_8, inner_hole_9_9, inner_hole_10_10);

tel;

node repairNode_15_0(
  alim_res_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  result_alt_sep_test_s : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_5_5 : int;
  const_hole_6_6 : int;
  inner_hole_7_7 : int;
  const_hole_8_8 : int;
  inner_hole_9_9 : int;
  inner_hole_10_10 : int
) returns (
  R : bool
);
var
  R_l_l : bool;
  R_l_r : bool;
  R_l : bool;
  R_r_l : bool;
  R_r_r : bool;
  R_r : bool;
let
  R_l_l = (if (inner_hole_0_0 = 50) then ((alim_res_s = const_hole_1_1) and ((const_hole_1_1 <= 740) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 49) then ((alim_res_s < const_hole_1_1) and ((const_hole_1_1 <= 740) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 48) then ((alim_res_s <= const_hole_1_1) and ((const_hole_1_1 <= 740) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 47) then ((alim_res_s > const_hole_1_1) and ((const_hole_1_1 <= 740) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 46) then ((alim_res_s >= const_hole_1_1) and ((const_hole_1_1 <= 740) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 45) then (alim_res_s <= Up_Separation_s) else (if (inner_hole_0_0 = 44) then (alim_res_s < Up_Separation_s) else (if (inner_hole_0_0 = 43) then (alim_res_s <= Down_Separation_s) else (if (inner_hole_0_0 = 42) then (alim_res_s < Down_Separation_s) else (if (inner_hole_0_0 = 41) then (alim_res_s <= result_alt_sep_test_s) else (if (inner_hole_0_0 = 40) then (alim_res_s < result_alt_sep_test_s) else (if (inner_hole_0_0 = 39) then (Up_Separation_s = const_hole_1_1) else (if (inner_hole_0_0 = 38) then (Up_Separation_s < const_hole_1_1) else (if (inner_hole_0_0 = 37) then (Up_Separation_s <= const_hole_1_1) else (if (inner_hole_0_0 = 36) then (Up_Separation_s > const_hole_1_1) else (if (inner_hole_0_0 = 35) then (Up_Separation_s >= const_hole_1_1) else (if (inner_hole_0_0 = 34) then (Up_Separation_s <= alim_res_s) else (if (inner_hole_0_0 = 33) then (Up_Separation_s < alim_res_s) else (if (inner_hole_0_0 = 32) then (Up_Separation_s <= Down_Separation_s) else (if (inner_hole_0_0 = 31) then (Up_Separation_s < Down_Separation_s) else (if (inner_hole_0_0 = 30) then (Up_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_0_0 = 29) then (Up_Separation_s < result_alt_sep_test_s) else (if (inner_hole_0_0 = 28) then (Down_Separation_s = const_hole_1_1) else (if (inner_hole_0_0 = 27) then (Down_Separation_s < const_hole_1_1) else (if (inner_hole_0_0 = 26) then (Down_Separation_s <= const_hole_1_1) else (if (inner_hole_0_0 = 25) then (Down_Separation_s > const_hole_1_1) else (if (inner_hole_0_0 = 24) then (Down_Separation_s >= const_hole_1_1) else (if (inner_hole_0_0 = 23) then (Down_Separation_s <= alim_res_s) else (if (inner_hole_0_0 = 22) then (Down_Separation_s < alim_res_s) else (if (inner_hole_0_0 = 21) then (Down_Separation_s <= Up_Separation_s) else (if (inner_hole_0_0 = 20) then (Down_Separation_s < Up_Separation_s) else (if (inner_hole_0_0 = 19) then (Down_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_0_0 = 18) then (Down_Separation_s < result_alt_sep_test_s) else (if (inner_hole_0_0 = 17) then ((result_alt_sep_test_s = const_hole_1_1) and ((const_hole_1_1 <= 2) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 16) then ((result_alt_sep_test_s < const_hole_1_1) and ((const_hole_1_1 <= 2) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 15) then ((result_alt_sep_test_s <= const_hole_1_1) and ((const_hole_1_1 <= 2) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 14) then ((result_alt_sep_test_s > const_hole_1_1) and ((const_hole_1_1 <= 2) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 13) then ((result_alt_sep_test_s >= const_hole_1_1) and ((const_hole_1_1 <= 2) and (const_hole_1_1 >= 0))) else (if (inner_hole_0_0 = 12) then (result_alt_sep_test_s <= alim_res_s) else (if (inner_hole_0_0 = 11) then (result_alt_sep_test_s < alim_res_s) else (if (inner_hole_0_0 = 10) then (result_alt_sep_test_s <= Up_Separation_s) else (if (inner_hole_0_0 = 9) then (result_alt_sep_test_s < Up_Separation_s) else (if (inner_hole_0_0 = 8) then (result_alt_sep_test_s <= Down_Separation_s) else (if (inner_hole_0_0 = 7) then (result_alt_sep_test_s < Down_Separation_s) else (if (inner_hole_0_0 = 6) then (alim_res_s = Up_Separation_s) else (if (inner_hole_0_0 = 5) then (alim_res_s = Down_Separation_s) else (if (inner_hole_0_0 = 4) then (alim_res_s = result_alt_sep_test_s) else (if (inner_hole_0_0 = 3) then (Up_Separation_s = Down_Separation_s) else (if (inner_hole_0_0 = 2) then (Up_Separation_s = result_alt_sep_test_s) else (Down_Separation_s = result_alt_sep_test_s))))))))))))))))))))))))))))))))))))))))))))))))));

  R_l_r = (if (inner_hole_2_2 = 50) then ((alim_res_s = const_hole_3_3) and ((const_hole_3_3 <= 740) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 49) then ((alim_res_s < const_hole_3_3) and ((const_hole_3_3 <= 740) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 48) then ((alim_res_s <= const_hole_3_3) and ((const_hole_3_3 <= 740) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 47) then ((alim_res_s > const_hole_3_3) and ((const_hole_3_3 <= 740) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 46) then ((alim_res_s >= const_hole_3_3) and ((const_hole_3_3 <= 740) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 45) then (alim_res_s <= Up_Separation_s) else (if (inner_hole_2_2 = 44) then (alim_res_s < Up_Separation_s) else (if (inner_hole_2_2 = 43) then (alim_res_s <= Down_Separation_s) else (if (inner_hole_2_2 = 42) then (alim_res_s < Down_Separation_s) else (if (inner_hole_2_2 = 41) then (alim_res_s <= result_alt_sep_test_s) else (if (inner_hole_2_2 = 40) then (alim_res_s < result_alt_sep_test_s) else (if (inner_hole_2_2 = 39) then (Up_Separation_s = const_hole_3_3) else (if (inner_hole_2_2 = 38) then (Up_Separation_s < const_hole_3_3) else (if (inner_hole_2_2 = 37) then (Up_Separation_s <= const_hole_3_3) else (if (inner_hole_2_2 = 36) then (Up_Separation_s > const_hole_3_3) else (if (inner_hole_2_2 = 35) then (Up_Separation_s >= const_hole_3_3) else (if (inner_hole_2_2 = 34) then (Up_Separation_s <= alim_res_s) else (if (inner_hole_2_2 = 33) then (Up_Separation_s < alim_res_s) else (if (inner_hole_2_2 = 32) then (Up_Separation_s <= Down_Separation_s) else (if (inner_hole_2_2 = 31) then (Up_Separation_s < Down_Separation_s) else (if (inner_hole_2_2 = 30) then (Up_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_2_2 = 29) then (Up_Separation_s < result_alt_sep_test_s) else (if (inner_hole_2_2 = 28) then (Down_Separation_s = const_hole_3_3) else (if (inner_hole_2_2 = 27) then (Down_Separation_s < const_hole_3_3) else (if (inner_hole_2_2 = 26) then (Down_Separation_s <= const_hole_3_3) else (if (inner_hole_2_2 = 25) then (Down_Separation_s > const_hole_3_3) else (if (inner_hole_2_2 = 24) then (Down_Separation_s >= const_hole_3_3) else (if (inner_hole_2_2 = 23) then (Down_Separation_s <= alim_res_s) else (if (inner_hole_2_2 = 22) then (Down_Separation_s < alim_res_s) else (if (inner_hole_2_2 = 21) then (Down_Separation_s <= Up_Separation_s) else (if (inner_hole_2_2 = 20) then (Down_Separation_s < Up_Separation_s) else (if (inner_hole_2_2 = 19) then (Down_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_2_2 = 18) then (Down_Separation_s < result_alt_sep_test_s) else (if (inner_hole_2_2 = 17) then ((result_alt_sep_test_s = const_hole_3_3) and ((const_hole_3_3 <= 2) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 16) then ((result_alt_sep_test_s < const_hole_3_3) and ((const_hole_3_3 <= 2) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 15) then ((result_alt_sep_test_s <= const_hole_3_3) and ((const_hole_3_3 <= 2) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 14) then ((result_alt_sep_test_s > const_hole_3_3) and ((const_hole_3_3 <= 2) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 13) then ((result_alt_sep_test_s >= const_hole_3_3) and ((const_hole_3_3 <= 2) and (const_hole_3_3 >= 0))) else (if (inner_hole_2_2 = 12) then (result_alt_sep_test_s <= alim_res_s) else (if (inner_hole_2_2 = 11) then (result_alt_sep_test_s < alim_res_s) else (if (inner_hole_2_2 = 10) then (result_alt_sep_test_s <= Up_Separation_s) else (if (inner_hole_2_2 = 9) then (result_alt_sep_test_s < Up_Separation_s) else (if (inner_hole_2_2 = 8) then (result_alt_sep_test_s <= Down_Separation_s) else (if (inner_hole_2_2 = 7) then (result_alt_sep_test_s < Down_Separation_s) else (if (inner_hole_2_2 = 6) then (alim_res_s = Up_Separation_s) else (if (inner_hole_2_2 = 5) then (alim_res_s = Down_Separation_s) else (if (inner_hole_2_2 = 4) then (alim_res_s = result_alt_sep_test_s) else (if (inner_hole_2_2 = 3) then (Up_Separation_s = Down_Separation_s) else (if (inner_hole_2_2 = 2) then (Up_Separation_s = result_alt_sep_test_s) else (Down_Separation_s = result_alt_sep_test_s))))))))))))))))))))))))))))))))))))))))))))))))));

  R_l = (if (inner_hole_4_4 = 1) then (R_l_l and R_l_r) else (if (inner_hole_4_4 = 2) then (R_l_l or R_l_r) else (if (inner_hole_4_4 = 3) then (R_l_l => R_l_r) else (R_l_l xor R_l_r))));

  R_r_l = (if (inner_hole_5_5 = 50) then ((alim_res_s = const_hole_6_6) and ((const_hole_6_6 <= 740) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 49) then ((alim_res_s < const_hole_6_6) and ((const_hole_6_6 <= 740) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 48) then ((alim_res_s <= const_hole_6_6) and ((const_hole_6_6 <= 740) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 47) then ((alim_res_s > const_hole_6_6) and ((const_hole_6_6 <= 740) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 46) then ((alim_res_s >= const_hole_6_6) and ((const_hole_6_6 <= 740) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 45) then (alim_res_s <= Up_Separation_s) else (if (inner_hole_5_5 = 44) then (alim_res_s < Up_Separation_s) else (if (inner_hole_5_5 = 43) then (alim_res_s <= Down_Separation_s) else (if (inner_hole_5_5 = 42) then (alim_res_s < Down_Separation_s) else (if (inner_hole_5_5 = 41) then (alim_res_s <= result_alt_sep_test_s) else (if (inner_hole_5_5 = 40) then (alim_res_s < result_alt_sep_test_s) else (if (inner_hole_5_5 = 39) then (Up_Separation_s = const_hole_6_6) else (if (inner_hole_5_5 = 38) then (Up_Separation_s < const_hole_6_6) else (if (inner_hole_5_5 = 37) then (Up_Separation_s <= const_hole_6_6) else (if (inner_hole_5_5 = 36) then (Up_Separation_s > const_hole_6_6) else (if (inner_hole_5_5 = 35) then (Up_Separation_s >= const_hole_6_6) else (if (inner_hole_5_5 = 34) then (Up_Separation_s <= alim_res_s) else (if (inner_hole_5_5 = 33) then (Up_Separation_s < alim_res_s) else (if (inner_hole_5_5 = 32) then (Up_Separation_s <= Down_Separation_s) else (if (inner_hole_5_5 = 31) then (Up_Separation_s < Down_Separation_s) else (if (inner_hole_5_5 = 30) then (Up_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_5_5 = 29) then (Up_Separation_s < result_alt_sep_test_s) else (if (inner_hole_5_5 = 28) then (Down_Separation_s = const_hole_6_6) else (if (inner_hole_5_5 = 27) then (Down_Separation_s < const_hole_6_6) else (if (inner_hole_5_5 = 26) then (Down_Separation_s <= const_hole_6_6) else (if (inner_hole_5_5 = 25) then (Down_Separation_s > const_hole_6_6) else (if (inner_hole_5_5 = 24) then (Down_Separation_s >= const_hole_6_6) else (if (inner_hole_5_5 = 23) then (Down_Separation_s <= alim_res_s) else (if (inner_hole_5_5 = 22) then (Down_Separation_s < alim_res_s) else (if (inner_hole_5_5 = 21) then (Down_Separation_s <= Up_Separation_s) else (if (inner_hole_5_5 = 20) then (Down_Separation_s < Up_Separation_s) else (if (inner_hole_5_5 = 19) then (Down_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_5_5 = 18) then (Down_Separation_s < result_alt_sep_test_s) else (if (inner_hole_5_5 = 17) then ((result_alt_sep_test_s = const_hole_6_6) and ((const_hole_6_6 <= 2) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 16) then ((result_alt_sep_test_s < const_hole_6_6) and ((const_hole_6_6 <= 2) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 15) then ((result_alt_sep_test_s <= const_hole_6_6) and ((const_hole_6_6 <= 2) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 14) then ((result_alt_sep_test_s > const_hole_6_6) and ((const_hole_6_6 <= 2) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 13) then ((result_alt_sep_test_s >= const_hole_6_6) and ((const_hole_6_6 <= 2) and (const_hole_6_6 >= 0))) else (if (inner_hole_5_5 = 12) then (result_alt_sep_test_s <= alim_res_s) else (if (inner_hole_5_5 = 11) then (result_alt_sep_test_s < alim_res_s) else (if (inner_hole_5_5 = 10) then (result_alt_sep_test_s <= Up_Separation_s) else (if (inner_hole_5_5 = 9) then (result_alt_sep_test_s < Up_Separation_s) else (if (inner_hole_5_5 = 8) then (result_alt_sep_test_s <= Down_Separation_s) else (if (inner_hole_5_5 = 7) then (result_alt_sep_test_s < Down_Separation_s) else (if (inner_hole_5_5 = 6) then (alim_res_s = Up_Separation_s) else (if (inner_hole_5_5 = 5) then (alim_res_s = Down_Separation_s) else (if (inner_hole_5_5 = 4) then (alim_res_s = result_alt_sep_test_s) else (if (inner_hole_5_5 = 3) then (Up_Separation_s = Down_Separation_s) else (if (inner_hole_5_5 = 2) then (Up_Separation_s = result_alt_sep_test_s) else (Down_Separation_s = result_alt_sep_test_s))))))))))))))))))))))))))))))))))))))))))))))))));

  R_r_r = (if (inner_hole_7_7 = 50) then ((alim_res_s = const_hole_8_8) and ((const_hole_8_8 <= 740) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 49) then ((alim_res_s < const_hole_8_8) and ((const_hole_8_8 <= 740) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 48) then ((alim_res_s <= const_hole_8_8) and ((const_hole_8_8 <= 740) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 47) then ((alim_res_s > const_hole_8_8) and ((const_hole_8_8 <= 740) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 46) then ((alim_res_s >= const_hole_8_8) and ((const_hole_8_8 <= 740) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 45) then (alim_res_s <= Up_Separation_s) else (if (inner_hole_7_7 = 44) then (alim_res_s < Up_Separation_s) else (if (inner_hole_7_7 = 43) then (alim_res_s <= Down_Separation_s) else (if (inner_hole_7_7 = 42) then (alim_res_s < Down_Separation_s) else (if (inner_hole_7_7 = 41) then (alim_res_s <= result_alt_sep_test_s) else (if (inner_hole_7_7 = 40) then (alim_res_s < result_alt_sep_test_s) else (if (inner_hole_7_7 = 39) then (Up_Separation_s = const_hole_8_8) else (if (inner_hole_7_7 = 38) then (Up_Separation_s < const_hole_8_8) else (if (inner_hole_7_7 = 37) then (Up_Separation_s <= const_hole_8_8) else (if (inner_hole_7_7 = 36) then (Up_Separation_s > const_hole_8_8) else (if (inner_hole_7_7 = 35) then (Up_Separation_s >= const_hole_8_8) else (if (inner_hole_7_7 = 34) then (Up_Separation_s <= alim_res_s) else (if (inner_hole_7_7 = 33) then (Up_Separation_s < alim_res_s) else (if (inner_hole_7_7 = 32) then (Up_Separation_s <= Down_Separation_s) else (if (inner_hole_7_7 = 31) then (Up_Separation_s < Down_Separation_s) else (if (inner_hole_7_7 = 30) then (Up_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_7_7 = 29) then (Up_Separation_s < result_alt_sep_test_s) else (if (inner_hole_7_7 = 28) then (Down_Separation_s = const_hole_8_8) else (if (inner_hole_7_7 = 27) then (Down_Separation_s < const_hole_8_8) else (if (inner_hole_7_7 = 26) then (Down_Separation_s <= const_hole_8_8) else (if (inner_hole_7_7 = 25) then (Down_Separation_s > const_hole_8_8) else (if (inner_hole_7_7 = 24) then (Down_Separation_s >= const_hole_8_8) else (if (inner_hole_7_7 = 23) then (Down_Separation_s <= alim_res_s) else (if (inner_hole_7_7 = 22) then (Down_Separation_s < alim_res_s) else (if (inner_hole_7_7 = 21) then (Down_Separation_s <= Up_Separation_s) else (if (inner_hole_7_7 = 20) then (Down_Separation_s < Up_Separation_s) else (if (inner_hole_7_7 = 19) then (Down_Separation_s <= result_alt_sep_test_s) else (if (inner_hole_7_7 = 18) then (Down_Separation_s < result_alt_sep_test_s) else (if (inner_hole_7_7 = 17) then ((result_alt_sep_test_s = const_hole_8_8) and ((const_hole_8_8 <= 2) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 16) then ((result_alt_sep_test_s < const_hole_8_8) and ((const_hole_8_8 <= 2) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 15) then ((result_alt_sep_test_s <= const_hole_8_8) and ((const_hole_8_8 <= 2) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 14) then ((result_alt_sep_test_s > const_hole_8_8) and ((const_hole_8_8 <= 2) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 13) then ((result_alt_sep_test_s >= const_hole_8_8) and ((const_hole_8_8 <= 2) and (const_hole_8_8 >= 0))) else (if (inner_hole_7_7 = 12) then (result_alt_sep_test_s <= alim_res_s) else (if (inner_hole_7_7 = 11) then (result_alt_sep_test_s < alim_res_s) else (if (inner_hole_7_7 = 10) then (result_alt_sep_test_s <= Up_Separation_s) else (if (inner_hole_7_7 = 9) then (result_alt_sep_test_s < Up_Separation_s) else (if (inner_hole_7_7 = 8) then (result_alt_sep_test_s <= Down_Separation_s) else (if (inner_hole_7_7 = 7) then (result_alt_sep_test_s < Down_Separation_s) else (if (inner_hole_7_7 = 6) then (alim_res_s = Up_Separation_s) else (if (inner_hole_7_7 = 5) then (alim_res_s = Down_Separation_s) else (if (inner_hole_7_7 = 4) then (alim_res_s = result_alt_sep_test_s) else (if (inner_hole_7_7 = 3) then (Up_Separation_s = Down_Separation_s) else (if (inner_hole_7_7 = 2) then (Up_Separation_s = result_alt_sep_test_s) else (Down_Separation_s = result_alt_sep_test_s))))))))))))))))))))))))))))))))))))))))))))))))));

  R_r = (if (inner_hole_9_9 = 1) then (R_r_l and R_r_r) else (if (inner_hole_9_9 = 2) then (R_r_l or R_r_r) else (if (inner_hole_9_9 = 3) then (R_r_l => R_r_r) else (R_r_l xor R_r_r))));

  R = (if (inner_hole_10_10 = 1) then (R_l and R_r) else (if (inner_hole_10_10 = 2) then (R_l or R_r) else (if (inner_hole_10_10 = 3) then (R_l => R_r) else (R_l xor R_r))));

tel;

node H_discovery(
  in : bool
) returns (
  out : bool
);
let
  out = (in -> (in and (pre out)));

tel;

node Check_spec(
  Cur_Vertical_Sep_s : int;
  High_Confidence_flag_s : int;
  Two_of_Three_Reports_Valid_flag_s : int;
  Own_Tracked_Alt_s : int;
  Own_Tracked_Alt_Rate_s : int;
  Other_Tracked_Alt_s : int;
  Alt_Layer_Value_s : int;
  Up_Separation_s : int;
  Down_Separation_s : int;
  Other_RAC_s : int;
  Other_Capability_s : int;
  Climb_Inhibit_s : int;
  result_alt_sep_test_s : int;
  alim_res_s : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_5_5 : int;
  const_hole_6_6 : int;
  inner_hole_7_7 : int;
  const_hole_8_8 : int;
  inner_hole_9_9 : int;
  inner_hole_10_10 : int;
  k : int
) returns (
  p1 : bool
);
var
  step : int;
  stepOK : bool;
let
  step = (0 -> (1 + (pre step)));

  stepOK = (if (step <= k) then T_node(Cur_Vertical_Sep_s, High_Confidence_flag_s, Two_of_Three_Reports_Valid_flag_s, Own_Tracked_Alt_s, Own_Tracked_Alt_Rate_s, Other_Tracked_Alt_s, Alt_Layer_Value_s, Up_Separation_s, Down_Separation_s, Other_RAC_s, Other_Capability_s, Climb_Inhibit_s, result_alt_sep_test_s, alim_res_s, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_5_5, const_hole_6_6, inner_hole_7_7, const_hole_8_8, inner_hole_9_9, inner_hole_10_10) else true);

  p1 = ((step >= k) and H_discovery(stepOK));

tel;

node main(
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_5_5 : int;
  const_hole_6_6 : int;
  inner_hole_7_7 : int;
  const_hole_8_8 : int;
  inner_hole_9_9 : int;
  inner_hole_10_10 : int
) returns (
  fail : bool
);
var
  Cur_Vertical_Sep_s0 : int;
  High_Confidence_flag_s0 : int;
  Two_of_Three_Reports_Valid_flag_s0 : int;
  Own_Tracked_Alt_s0 : int;
  Own_Tracked_Alt_Rate_s0 : int;
  Other_Tracked_Alt_s0 : int;
  Alt_Layer_Value_s0 : int;
  Up_Separation_s0 : int;
  Down_Separation_s0 : int;
  Other_RAC_s0 : int;
  Other_Capability_s0 : int;
  Climb_Inhibit_s0 : int;
  out_00 : int;
  out_10 : int;
  ok_0 : bool;
let
  --%MAIN;
  Cur_Vertical_Sep_s0 = 599;

  High_Confidence_flag_s0 = 0;

  Two_of_Three_Reports_Valid_flag_s0 = 0;

  Own_Tracked_Alt_s0 = 0;

  Own_Tracked_Alt_Rate_s0 = 0;

  Other_Tracked_Alt_s0 = 1;

  Alt_Layer_Value_s0 = 0;

  Up_Separation_s0 = 0;

  Down_Separation_s0 = 400;

  Other_RAC_s0 = 7;

  Other_Capability_s0 = 1;

  Climb_Inhibit_s0 = 1;

  out_00 = 0;

  out_10 = 400;

  ok_0 = Check_spec(Cur_Vertical_Sep_s0, High_Confidence_flag_s0, Two_of_Three_Reports_Valid_flag_s0, Own_Tracked_Alt_s0, Own_Tracked_Alt_Rate_s0, Other_Tracked_Alt_s0, Alt_Layer_Value_s0, Up_Separation_s0, Down_Separation_s0, Other_RAC_s0, Other_Capability_s0, Climb_Inhibit_s0, out_00, out_10, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_5_5, const_hole_6_6, inner_hole_7_7, const_hole_8_8, inner_hole_9_9, inner_hole_10_10, 0);

  fail = (not ok_0);

  assert (true -> (inner_hole_0_0 = (pre inner_hole_0_0)));

  assert (true -> (const_hole_1_1 = (pre const_hole_1_1)));

  assert (true -> (inner_hole_2_2 = (pre inner_hole_2_2)));

  assert (true -> (const_hole_3_3 = (pre const_hole_3_3)));

  assert (true -> (inner_hole_4_4 = (pre inner_hole_4_4)));

  assert (true -> (inner_hole_5_5 = (pre inner_hole_5_5)));

  assert (true -> (const_hole_6_6 = (pre const_hole_6_6)));

  assert (true -> (inner_hole_7_7 = (pre inner_hole_7_7)));

  assert (true -> (const_hole_8_8 = (pre const_hole_8_8)));

  assert (true -> (inner_hole_9_9 = (pre inner_hole_9_9)));

  assert (true -> (inner_hole_10_10 = (pre inner_hole_10_10)));

  --%PROPERTY fail;

tel;
