node T_node(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_0_2 : int;
  const_hole_1_3 : int;
  inner_hole_2_4 : int;
  const_hole_3_5 : int;
  inner_hole_4_6 : int
) returns (
  p1 : bool
);
let
  p1 = (((repairNode_31_0(pedal_r, inner_hole_0_0, const_hole_1_1) and (pedal_r <> 4)) => (not skid_r)) => repairNode_8224_0(AltPressure_r, NormalPressure_r, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6));

tel;

node repairNode_31_0(
  pedal_r : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int
) returns (
  R : bool
);
let
  R = (if (inner_hole_0_0 = 5) then ((pedal_r = const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else (if (inner_hole_0_0 = 4) then ((pedal_r < const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else (if (inner_hole_0_0 = 3) then ((pedal_r <= const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else (if (inner_hole_0_0 = 2) then ((pedal_r > const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else ((pedal_r >= const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5))))))))))));

tel;

node repairNode_8224_0(
  AltPressure_r : int;
  NormalPressure_r : int;
  inner_hole_0_2 : int;
  const_hole_1_3 : int;
  inner_hole_2_4 : int;
  const_hole_3_5 : int;
  inner_hole_4_6 : int
) returns (
  R : bool
);
var
  R_l : bool;
  R_r : bool;
let
  R_l = (if (inner_hole_0_2 = 15) then (AltPressure_r = const_hole_1_3) else (if (inner_hole_0_2 = 14) then (AltPressure_r < const_hole_1_3) else (if (inner_hole_0_2 = 13) then (AltPressure_r <= const_hole_1_3) else (if (inner_hole_0_2 = 12) then (AltPressure_r > const_hole_1_3) else (if (inner_hole_0_2 = 11) then (AltPressure_r >= const_hole_1_3) else (if (inner_hole_0_2 = 10) then (AltPressure_r <= NormalPressure_r) else (if (inner_hole_0_2 = 9) then (AltPressure_r < NormalPressure_r) else (if (inner_hole_0_2 = 8) then (NormalPressure_r = const_hole_1_3) else (if (inner_hole_0_2 = 7) then (NormalPressure_r < const_hole_1_3) else (if (inner_hole_0_2 = 6) then (NormalPressure_r <= const_hole_1_3) else (if (inner_hole_0_2 = 5) then (NormalPressure_r > const_hole_1_3) else (if (inner_hole_0_2 = 4) then (NormalPressure_r >= const_hole_1_3) else (if (inner_hole_0_2 = 3) then (NormalPressure_r <= AltPressure_r) else (if (inner_hole_0_2 = 2) then (NormalPressure_r < AltPressure_r) else (AltPressure_r = NormalPressure_r)))))))))))))));

  R_r = (if (inner_hole_2_4 = 15) then (AltPressure_r = const_hole_3_5) else (if (inner_hole_2_4 = 14) then (AltPressure_r < const_hole_3_5) else (if (inner_hole_2_4 = 13) then (AltPressure_r <= const_hole_3_5) else (if (inner_hole_2_4 = 12) then (AltPressure_r > const_hole_3_5) else (if (inner_hole_2_4 = 11) then (AltPressure_r >= const_hole_3_5) else (if (inner_hole_2_4 = 10) then (AltPressure_r <= NormalPressure_r) else (if (inner_hole_2_4 = 9) then (AltPressure_r < NormalPressure_r) else (if (inner_hole_2_4 = 8) then (NormalPressure_r = const_hole_3_5) else (if (inner_hole_2_4 = 7) then (NormalPressure_r < const_hole_3_5) else (if (inner_hole_2_4 = 6) then (NormalPressure_r <= const_hole_3_5) else (if (inner_hole_2_4 = 5) then (NormalPressure_r > const_hole_3_5) else (if (inner_hole_2_4 = 4) then (NormalPressure_r >= const_hole_3_5) else (if (inner_hole_2_4 = 3) then (NormalPressure_r <= AltPressure_r) else (if (inner_hole_2_4 = 2) then (NormalPressure_r < AltPressure_r) else (AltPressure_r = NormalPressure_r)))))))))))))));

  R = (if (inner_hole_4_6 = 1) then (R_l and R_r) else (if (inner_hole_4_6 = 2) then (R_l or R_r) else (if (inner_hole_4_6 = 3) then (R_l => R_r) else (R_l xor R_r))));

tel;

node H_discovery(
  in : bool
) returns (
  out : bool
);
let
  out = (in -> (in and (pre out)));

tel;

node Check_spec(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_0_2 : int;
  const_hole_1_3 : int;
  inner_hole_2_4 : int;
  const_hole_3_5 : int;
  inner_hole_4_6 : int;
  k : int
) returns (
  p1 : bool
);
var
  step : int;
  stepOK : bool;
let
  step = (0 -> (1 + (pre step)));

  stepOK = (if (step <= k) then T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6) else true);

  p1 = ((step >= k) and H_discovery(stepOK));

tel;

node main(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_0_2 : int;
  const_hole_1_3 : int;
  inner_hole_2_4 : int;
  const_hole_3_5 : int;
  inner_hole_4_6 : int
) returns (
  fail : bool
);
var
  ok_0 : bool;
  ok_1 : bool;
  ok_2 : bool;
  ok_3 : bool;
  ok_4 : bool;
  ok_5 : bool;
  ok_6 : bool;
  ok_7 : bool;
  ok_8 : bool;
  ok_9 : bool;
  pedal_r0 : int;
  autoBreak_r0 : bool;
  skid_r0 : bool;
  out_00 : int;
  out_10 : int;
  out_20 : int;
  pedal_r1 : int;
  autoBreak_r1 : bool;
  skid_r1 : bool;
  NormalPressure_r1 : int;
  AltPressure_r1 : int;
  Sys_Mode1 : int;
  pedal_r2 : int;
  autoBreak_r2 : bool;
  skid_r2 : bool;
  NormalPressure_r2 : int;
  AltPressure_r2 : int;
  Sys_Mode2 : int;
  pedal_r3 : int;
  autoBreak_r3 : bool;
  skid_r3 : bool;
  NormalPressure_r3 : int;
  AltPressure_r3 : int;
  Sys_Mode3 : int;
  pedal_r4 : int;
  autoBreak_r4 : bool;
  skid_r4 : bool;
  out_04 : int;
  out_14 : int;
  out_24 : int;
  pedal_r5 : int;
  autoBreak_r5 : bool;
  skid_r5 : bool;
  NormalPressure_r5 : int;
  AltPressure_r5 : int;
  Sys_Mode5 : int;
  pedal_r6 : int;
  autoBreak_r6 : bool;
  skid_r6 : bool;
  NormalPressure_r6 : int;
  AltPressure_r6 : int;
  Sys_Mode6 : int;
  pedal_r7 : int;
  autoBreak_r7 : bool;
  skid_r7 : bool;
  NormalPressure_r7 : int;
  AltPressure_r7 : int;
  Sys_Mode7 : int;
  pedal_r8 : int;
  autoBreak_r8 : bool;
  skid_r8 : bool;
  NormalPressure_r8 : int;
  AltPressure_r8 : int;
  Sys_Mode8 : int;
  pedal_r9 : int;
  autoBreak_r9 : bool;
  skid_r9 : bool;
  NormalPressure_r9 : int;
  AltPressure_r9 : int;
  Sys_Mode9 : int;
  fixedRout : bool;
  rPrimeOut : bool;
let
  --%MAIN;
  pedal_r0 = 4;

  autoBreak_r0 = false;

  skid_r0 = true;

  out_00 = 0;

  out_10 = 0;

  out_20 = 0;

  pedal_r1 = 6;

  autoBreak_r1 = true;

  skid_r1 = true;

  NormalPressure_r1 = -4;

  AltPressure_r1 = -4;

  Sys_Mode1 = 31;

  pedal_r2 = -1;

  autoBreak_r2 = true;

  skid_r2 = false;

  NormalPressure_r2 = 1;

  AltPressure_r2 = 1;

  Sys_Mode2 = 32;

  pedal_r3 = 3;

  autoBreak_r3 = true;

  skid_r3 = false;

  NormalPressure_r3 = 2;

  AltPressure_r3 = 2;

  Sys_Mode3 = 30;

  pedal_r4 = 3;

  autoBreak_r4 = false;

  skid_r4 = false;

  out_04 = 3;

  out_14 = 0;

  out_24 = 0;

  pedal_r5 = 30;

  autoBreak_r5 = true;

  skid_r5 = false;

  NormalPressure_r5 = -1;

  AltPressure_r5 = 0;

  Sys_Mode5 = 31;

  pedal_r6 = 2;

  autoBreak_r6 = true;

  skid_r6 = true;

  NormalPressure_r6 = -1;

  AltPressure_r6 = -2;

  Sys_Mode6 = 31;

  pedal_r7 = 3;

  autoBreak_r7 = true;

  skid_r7 = false;

  NormalPressure_r7 = 0;

  AltPressure_r7 = -1;

  Sys_Mode7 = 30;

  pedal_r8 = 0;

  autoBreak_r8 = true;

  skid_r8 = true;

  NormalPressure_r8 = 1;

  AltPressure_r8 = 1;

  Sys_Mode8 = 31;

  pedal_r9 = -2;

  autoBreak_r9 = false;

  skid_r9 = true;

  NormalPressure_r9 = -1;

  AltPressure_r9 = 0;

  Sys_Mode9 = 31;

  ok_0 = Check_spec(pedal_r0, autoBreak_r0, skid_r0, out_00, out_10, out_20, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_1 = Check_spec(pedal_r1, autoBreak_r1, skid_r1, NormalPressure_r1, AltPressure_r1, Sys_Mode1, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_2 = Check_spec(pedal_r2, autoBreak_r2, skid_r2, NormalPressure_r2, AltPressure_r2, Sys_Mode2, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_3 = Check_spec(pedal_r3, autoBreak_r3, skid_r3, NormalPressure_r3, AltPressure_r3, Sys_Mode3, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_4 = Check_spec(pedal_r4, autoBreak_r4, skid_r4, out_04, out_14, out_24, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_5 = Check_spec(pedal_r5, autoBreak_r5, skid_r5, NormalPressure_r5, AltPressure_r5, Sys_Mode5, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_6 = Check_spec(pedal_r6, autoBreak_r6, skid_r6, NormalPressure_r6, AltPressure_r6, Sys_Mode6, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_7 = Check_spec(pedal_r7, autoBreak_r7, skid_r7, NormalPressure_r7, AltPressure_r7, Sys_Mode7, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_8 = Check_spec(pedal_r8, autoBreak_r8, skid_r8, NormalPressure_r8, AltPressure_r8, Sys_Mode8, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  ok_9 = Check_spec(pedal_r9, autoBreak_r9, skid_r9, NormalPressure_r9, AltPressure_r9, Sys_Mode9, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6, 0);

  fail = (not ((not ok_9) and ((not ok_8) and ((not ok_7) and ((not ok_6) and ((not ok_5) and (ok_4 and ((not ok_3) and ((not ok_2) and ((not ok_1) and (ok_0 and (fixedRout and (not rPrimeOut)))))))))))));

  fixedRout = Fixed_T(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode);

  rPrimeOut = T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, inner_hole_0_0, const_hole_1_1, inner_hole_0_2, const_hole_1_3, inner_hole_2_4, const_hole_3_5, inner_hole_4_6);

  assert (true -> (inner_hole_0_0 = (pre inner_hole_0_0)));

  assert (true -> (const_hole_1_1 = (pre const_hole_1_1)));

  assert (true -> (inner_hole_0_2 = (pre inner_hole_0_2)));

  assert (true -> (const_hole_1_3 = (pre const_hole_1_3)));

  assert (true -> (inner_hole_2_4 = (pre inner_hole_2_4)));

  assert (true -> (const_hole_3_5 = (pre const_hole_3_5)));

  assert (true -> (inner_hole_4_6 = (pre inner_hole_4_6)));

  --%PROPERTY fail;

tel;

node Fixed_T(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int
) returns (
  p1 : bool
);
let
  p1 = (((((pedal_r >= 31) and (31 = (-1))) and (pedal_r <> 4)) => (not skid_r)) => ((AltPressure_r <= NormalPressure_r) and (AltPressure_r = 0)));

tel;
