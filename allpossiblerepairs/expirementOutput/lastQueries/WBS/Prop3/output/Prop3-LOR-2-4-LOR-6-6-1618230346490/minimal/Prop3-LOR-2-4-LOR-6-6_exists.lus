node T_node(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_0_5 : int;
  const_hole_1_6 : int
) returns (
  p1 : bool
);
let
  p1 = ((repairNode_37_0(pedal_r, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4) xor (not skid_r)) or repairNode_6515_0(NormalPressure_r, inner_hole_0_5, const_hole_1_6));

tel;

node repairNode_37_0(
  pedal_r : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int
) returns (
  R : bool
);
var
  R_l : bool;
  R_r : bool;
let
  R_l = (if (inner_hole_0_0 = 5) then ((pedal_r = const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else (if (inner_hole_0_0 = 4) then ((pedal_r < const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else (if (inner_hole_0_0 = 3) then ((pedal_r <= const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else (if (inner_hole_0_0 = 2) then ((pedal_r > const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5)))))))) else ((pedal_r >= const_hole_1_1) and ((const_hole_1_1 = 0) or ((const_hole_1_1 = 1) or ((const_hole_1_1 = 2) or ((const_hole_1_1 = 3) or ((const_hole_1_1 = 4) or ((const_hole_1_1 = (-1)) or (const_hole_1_1 = 5))))))))))));

  R_r = (if (inner_hole_2_2 = 5) then ((pedal_r = const_hole_3_3) and ((const_hole_3_3 = 0) or ((const_hole_3_3 = 1) or ((const_hole_3_3 = 2) or ((const_hole_3_3 = 3) or ((const_hole_3_3 = 4) or ((const_hole_3_3 = (-1)) or (const_hole_3_3 = 5)))))))) else (if (inner_hole_2_2 = 4) then ((pedal_r < const_hole_3_3) and ((const_hole_3_3 = 0) or ((const_hole_3_3 = 1) or ((const_hole_3_3 = 2) or ((const_hole_3_3 = 3) or ((const_hole_3_3 = 4) or ((const_hole_3_3 = (-1)) or (const_hole_3_3 = 5)))))))) else (if (inner_hole_2_2 = 3) then ((pedal_r <= const_hole_3_3) and ((const_hole_3_3 = 0) or ((const_hole_3_3 = 1) or ((const_hole_3_3 = 2) or ((const_hole_3_3 = 3) or ((const_hole_3_3 = 4) or ((const_hole_3_3 = (-1)) or (const_hole_3_3 = 5)))))))) else (if (inner_hole_2_2 = 2) then ((pedal_r > const_hole_3_3) and ((const_hole_3_3 = 0) or ((const_hole_3_3 = 1) or ((const_hole_3_3 = 2) or ((const_hole_3_3 = 3) or ((const_hole_3_3 = 4) or ((const_hole_3_3 = (-1)) or (const_hole_3_3 = 5)))))))) else ((pedal_r >= const_hole_3_3) and ((const_hole_3_3 = 0) or ((const_hole_3_3 = 1) or ((const_hole_3_3 = 2) or ((const_hole_3_3 = 3) or ((const_hole_3_3 = 4) or ((const_hole_3_3 = (-1)) or (const_hole_3_3 = 5))))))))))));

  R = (if (inner_hole_4_4 = 1) then (R_l and R_r) else (if (inner_hole_4_4 = 2) then (R_l or R_r) else (if (inner_hole_4_4 = 3) then (R_l => R_r) else (R_l xor R_r))));

tel;

node repairNode_6515_0(
  NormalPressure_r : int;
  inner_hole_0_5 : int;
  const_hole_1_6 : int
) returns (
  R : bool
);
let
  R = (if (inner_hole_0_5 = 5) then (NormalPressure_r = const_hole_1_6) else (if (inner_hole_0_5 = 4) then (NormalPressure_r < const_hole_1_6) else (if (inner_hole_0_5 = 3) then (NormalPressure_r <= const_hole_1_6) else (if (inner_hole_0_5 = 2) then (NormalPressure_r > const_hole_1_6) else (NormalPressure_r >= const_hole_1_6)))));

tel;

node H_discovery(
  in : bool
) returns (
  out : bool
);
let
  out = (in -> (in and (pre out)));

tel;

node Check_spec(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_0_5 : int;
  const_hole_1_6 : int;
  k : int
) returns (
  p1 : bool
);
var
  step : int;
  stepOK : bool;
let
  step = (0 -> (1 + (pre step)));

  stepOK = (if (step <= k) then T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6) else true);

  p1 = ((step >= k) and H_discovery(stepOK));

tel;

node main(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_0 : int;
  const_hole_1_1 : int;
  inner_hole_2_2 : int;
  const_hole_3_3 : int;
  inner_hole_4_4 : int;
  inner_hole_0_5 : int;
  const_hole_1_6 : int
) returns (
  fail : bool
);
var
  ok_0 : bool;
  ok_1 : bool;
  ok_2 : bool;
  ok_3 : bool;
  ok_4 : bool;
  ok_5 : bool;
  ok_6 : bool;
  ok_7 : bool;
  ok_8 : bool;
  ok_9 : bool;
  ok_10 : bool;
  pedal_r0 : int;
  autoBreak_r0 : bool;
  skid_r0 : bool;
  out_00 : int;
  out_10 : int;
  out_20 : int;
  pedal_r1 : int;
  autoBreak_r1 : bool;
  skid_r1 : bool;
  out_01 : int;
  out_11 : int;
  out_21 : int;
  pedal_r2 : int;
  autoBreak_r2 : bool;
  skid_r2 : bool;
  NormalPressure_r2 : int;
  AltPressure_r2 : int;
  Sys_Mode2 : int;
  pedal_r3 : int;
  autoBreak_r3 : bool;
  skid_r3 : bool;
  NormalPressure_r3 : int;
  AltPressure_r3 : int;
  Sys_Mode3 : int;
  pedal_r4 : int;
  autoBreak_r4 : bool;
  skid_r4 : bool;
  NormalPressure_r4 : int;
  AltPressure_r4 : int;
  Sys_Mode4 : int;
  pedal_r5 : int;
  autoBreak_r5 : bool;
  skid_r5 : bool;
  out_05 : int;
  out_15 : int;
  out_25 : int;
  pedal_r6 : int;
  autoBreak_r6 : bool;
  skid_r6 : bool;
  out_06 : int;
  out_16 : int;
  out_26 : int;
  pedal_r7 : int;
  autoBreak_r7 : bool;
  skid_r7 : bool;
  out_07 : int;
  out_17 : int;
  out_27 : int;
  pedal_r8 : int;
  autoBreak_r8 : bool;
  skid_r8 : bool;
  out_08 : int;
  out_18 : int;
  out_28 : int;
  pedal_r9 : int;
  autoBreak_r9 : bool;
  skid_r9 : bool;
  out_09 : int;
  out_19 : int;
  out_29 : int;
  pedal_r10 : int;
  autoBreak_r10 : bool;
  skid_r10 : bool;
  out_010 : int;
  out_110 : int;
  out_210 : int;
  fixedRout : bool;
  rPrimeOut : bool;
let
  --%MAIN;
  pedal_r0 = 5;

  autoBreak_r0 = true;

  skid_r0 = true;

  out_00 = 0;

  out_10 = 0;

  out_20 = 0;

  pedal_r1 = 3;

  autoBreak_r1 = true;

  skid_r1 = true;

  out_01 = 0;

  out_11 = 0;

  out_21 = 0;

  pedal_r2 = 2;

  autoBreak_r2 = false;

  skid_r2 = true;

  NormalPressure_r2 = -3;

  AltPressure_r2 = 31;

  Sys_Mode2 = 32;

  pedal_r3 = 3;

  autoBreak_r3 = false;

  skid_r3 = true;

  NormalPressure_r3 = -1;

  AltPressure_r3 = 30;

  Sys_Mode3 = 31;

  pedal_r4 = 0;

  autoBreak_r4 = true;

  skid_r4 = true;

  NormalPressure_r4 = 1;

  AltPressure_r4 = 30;

  Sys_Mode4 = 31;

  pedal_r5 = 5;

  autoBreak_r5 = true;

  skid_r5 = false;

  out_05 = 1;

  out_15 = 0;

  out_25 = 0;

  pedal_r6 = -1;

  autoBreak_r6 = true;

  skid_r6 = false;

  out_06 = 1;

  out_16 = 0;

  out_26 = 0;

  pedal_r7 = -2;

  autoBreak_r7 = true;

  skid_r7 = false;

  out_07 = 1;

  out_17 = 0;

  out_27 = 0;

  pedal_r8 = 4;

  autoBreak_r8 = true;

  skid_r8 = false;

  out_08 = 5;

  out_18 = 0;

  out_28 = 0;

  pedal_r9 = 1;

  autoBreak_r9 = false;

  skid_r9 = false;

  out_09 = 1;

  out_19 = 0;

  out_29 = 0;

  pedal_r10 = 6;

  autoBreak_r10 = true;

  skid_r10 = false;

  out_010 = 1;

  out_110 = 0;

  out_210 = 0;

  ok_0 = Check_spec(pedal_r0, autoBreak_r0, skid_r0, out_00, out_10, out_20, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_1 = Check_spec(pedal_r1, autoBreak_r1, skid_r1, out_01, out_11, out_21, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_2 = Check_spec(pedal_r2, autoBreak_r2, skid_r2, NormalPressure_r2, AltPressure_r2, Sys_Mode2, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_3 = Check_spec(pedal_r3, autoBreak_r3, skid_r3, NormalPressure_r3, AltPressure_r3, Sys_Mode3, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_4 = Check_spec(pedal_r4, autoBreak_r4, skid_r4, NormalPressure_r4, AltPressure_r4, Sys_Mode4, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_5 = Check_spec(pedal_r5, autoBreak_r5, skid_r5, out_05, out_15, out_25, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_6 = Check_spec(pedal_r6, autoBreak_r6, skid_r6, out_06, out_16, out_26, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_7 = Check_spec(pedal_r7, autoBreak_r7, skid_r7, out_07, out_17, out_27, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_8 = Check_spec(pedal_r8, autoBreak_r8, skid_r8, out_08, out_18, out_28, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_9 = Check_spec(pedal_r9, autoBreak_r9, skid_r9, out_09, out_19, out_29, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  ok_10 = Check_spec(pedal_r10, autoBreak_r10, skid_r10, out_010, out_110, out_210, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6, 0);

  fail = (not (ok_10 and (ok_9 and (ok_8 and (ok_7 and (ok_6 and (ok_5 and ((not ok_4) and ((not ok_3) and ((not ok_2) and (ok_1 and (ok_0 and (fixedRout and (not rPrimeOut))))))))))))));

  fixedRout = Fixed_T(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode);

  rPrimeOut = T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, inner_hole_0_0, const_hole_1_1, inner_hole_2_2, const_hole_3_3, inner_hole_4_4, inner_hole_0_5, const_hole_1_6);

  assert (true -> (inner_hole_0_0 = (pre inner_hole_0_0)));

  assert (true -> (const_hole_1_1 = (pre const_hole_1_1)));

  assert (true -> (inner_hole_2_2 = (pre inner_hole_2_2)));

  assert (true -> (const_hole_3_3 = (pre const_hole_3_3)));

  assert (true -> (inner_hole_4_4 = (pre inner_hole_4_4)));

  assert (true -> (inner_hole_0_5 = (pre inner_hole_0_5)));

  assert (true -> (const_hole_1_6 = (pre const_hole_1_6)));

  --%PROPERTY fail;

tel;

node Fixed_T(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int
) returns (
  p1 : bool
);
let
  p1 = (((((pedal_r >= 6) and (6 = (-1))) xor ((pedal_r > 7) and (7 = (-1)))) xor (not skid_r)) or (NormalPressure_r = 0));

tel;
