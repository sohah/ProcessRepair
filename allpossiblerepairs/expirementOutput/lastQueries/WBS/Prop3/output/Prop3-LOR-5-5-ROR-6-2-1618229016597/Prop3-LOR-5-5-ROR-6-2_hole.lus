node T_node(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_1 : int;
  const_hole_1_2 : int;
  inner_hole_0_0 : int
) returns (
  p1 : bool
);
let
  p1 = ((((pedal_r = 0) and (pedal_r <= 4)) and repairNode_47_0(skid_r, inner_hole_0_0)) and repairNode_8251_0(NormalPressure_r, inner_hole_0_1, const_hole_1_2));

tel;

node repairNode_47_0(
  skid_r : bool;
  inner_hole_0_0 : int
) returns (
  R : bool
);
let
  R = (if (inner_hole_0_0 = 2) then skid_r else (not skid_r));

tel;

node repairNode_8251_0(
  NormalPressure_r : int;
  inner_hole_0_1 : int;
  const_hole_1_2 : int
) returns (
  R : bool
);
let
  R = (if (inner_hole_0_1 = 5) then (NormalPressure_r = const_hole_1_2) else (if (inner_hole_0_1 = 4) then (NormalPressure_r < const_hole_1_2) else (if (inner_hole_0_1 = 3) then (NormalPressure_r <= const_hole_1_2) else (if (inner_hole_0_1 = 2) then (NormalPressure_r > const_hole_1_2) else (NormalPressure_r >= const_hole_1_2)))));

tel;

node H_discovery(
  in : bool
) returns (
  out : bool
);
let
  out = (in -> (in and (pre out)));

tel;

node Check_spec(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  inner_hole_0_1 : int;
  const_hole_1_2 : int;
  inner_hole_0_0 : int;
  k : int
) returns (
  p1 : bool
);
var
  step : int;
  stepOK : bool;
let
  step = (0 -> (1 + (pre step)));

  stepOK = (if (step <= k) then T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, inner_hole_0_1, const_hole_1_2, inner_hole_0_0) else true);

  p1 = ((step >= k) and H_discovery(stepOK));

tel;

node main(
  inner_hole_0_1 : int;
  const_hole_1_2 : int;
  inner_hole_0_0 : int
) returns (
  fail : bool
);
var
  pedal_r0 : int;
  autoBreak_r0 : bool;
  skid_r0 : bool;
  out_00 : int;
  out_10 : int;
  out_20 : int;
  ok_0 : bool;
let
  --%MAIN;
  pedal_r0 = 5;

  autoBreak_r0 = true;

  skid_r0 = false;

  out_00 = 1;

  out_10 = 0;

  out_20 = 0;

  ok_0 = Check_spec(pedal_r0, autoBreak_r0, skid_r0, out_00, out_10, out_20, inner_hole_0_1, const_hole_1_2, inner_hole_0_0, 0);

  fail = (not ok_0);

  assert (true -> (inner_hole_0_1 = (pre inner_hole_0_1)));

  assert (true -> (const_hole_1_2 = (pre const_hole_1_2)));

  assert (true -> (inner_hole_0_0 = (pre inner_hole_0_0)));

  --%PROPERTY fail;

tel;
